{"ast":null,"code":"var _jsxFileName = \"/Users/maggy/Workspace/bugly-world/src/screens/MainScreen/MainScreen.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport Minesweeper from \"../../components/Minesweeper/Minesweeper\";\n\n// 로그인용\nimport { useAgent } from \"../../contexts/AgentContext\";\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\nimport { db } from \"../../firebase\";\nimport { hashPassword } from \"../../utils/hash\";\nimport \"../../styles/layout.css\";\nimport \"../../styles/transition.css\";\nimport \"./mainScreen.css\";\nimport Window from \"../../components/Window\";\nimport QuizModal from \"../../components/QuizModal/QuizModal\";\nimport Buttons from \"../../components/Buttons\";\n\n// Sound\nimport error from \"../../assets/sounds/error sound.mp3\";\nimport shutdown from \"../../assets/sounds/shut down.mp3\";\nimport Submits from \"../../components/Submits\";\n\n// folder\nimport activatedImg from \"../../assets/images/activated-folder.png\";\nimport inactivatedImg from \"../../assets/images/inactivated-folder.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainScreen({\n  onNext\n}) {\n  _s();\n  const [fadeIn, setFadeIn] = useState(\"\");\n  const [clickDisabled, setClickDisabled] = useState(false);\n  const {\n    setAgent,\n    skippedCount,\n    setSkippedCount\n  } = useAgent();\n  const [password, setPassword] = useState(\"\");\n  const [loginError, setLoginError] = useState(\"\");\n  const [windows, setWindows] = useState([]);\n  const [activeWindowId, setActiveWindowId] = useState(null);\n  const nextWindowId = useRef(0);\n  const [visibleFolderIndex, setVisibleFolderIndex] = useState(0);\n  const [bugRemovalIndex, setBugRemovalIndex] = useState(0);\n  const [solvedLevels, setSolvedLevels] = useState([]);\n  // Quiz modal state\n  const [quizData, setQuizData] = useState(null);\n  const [quizAnswer, setQuizAnswer] = useState(\"\");\n  const [quizWindowId, setQuizWindowId] = useState(null);\n  const [quizWrongAttempts, setQuizWrongAttempts] = useState(0);\n  const [quizShowHint, setQuizShowHint] = useState(false);\n  const [requestedQuiz, setRequestedQuiz] = useState(null);\n  const bugCount = 150;\n  const bugDataRef = useRef(Array.from({\n    length: bugCount\n  }, () => ({\n    top: Math.random() * 90,\n    left: Math.random() * 90,\n    size: 1.5 + Math.random() * 1.5\n  })));\n  const bugs = bugDataRef.current.map((data, i) => {\n    if (i < bugRemovalIndex) return null;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"main-screen__bug-text\",\n      style: {\n        top: `${data.top}%`,\n        left: `${data.left}%`,\n        fontSize: `${data.size}vh`\n      },\n      children: \"BUG\"\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this);\n  }).filter(Boolean);\n  async function handleLoginSubmit(e) {\n    e.preventDefault();\n    const hashed = await hashPassword(password);\n    const q = query(collection(db, \"agents\"), where(\"passwordHash\", \"==\", hashed));\n    const snapshot = await getDocs(q);\n    if (!snapshot.empty) {\n      var _data$progress;\n      const doc = snapshot.docs[0];\n      const data = doc.data();\n      setAgent({\n        id: doc.id,\n        progress: (_data$progress = data.progress) !== null && _data$progress !== void 0 ? _data$progress : 0,\n        passwordHash: hashed\n      });\n      setLoginError(\"\");\n      handleClick();\n    } else {\n      setLoginError(\"요원코드가 올바르지 않습니다.\");\n      handleClose();\n    }\n  }\n  const screenRef = useRef(null);\n  const se_error = new Audio(error);\n  const se_shutdown = new Audio(shutdown);\n  function createWindowContent(label) {\n    return {\n      title: \"UglyWorld in_BUG\",\n      content: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [label, \" \\uB0B4\\uC6A9\\uC785\\uB2C8\\uB2E4.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 16\n      }, this)\n    };\n  }\n  useEffect(() => {\n    const fadeTimeout = setTimeout(() => {\n      setFadeIn(\"fade-in\");\n    }, 50);\n    return () => {\n      clearTimeout(fadeTimeout);\n    };\n  }, []);\n  function handleClick() {\n    if (clickDisabled) return;\n    const id = nextWindowId.current++;\n    const {\n      title,\n      content\n    } = createWindowContent(\"첫 번째 창\");\n    setWindows(prev => [...prev, {\n      id,\n      title,\n      content\n    }]);\n    setActiveWindowId(id);\n    se_error.play();\n  }\n  function handleClose(id) {\n    setWindows(prev => {\n      const newWindows = prev.filter(win => win.id !== id);\n      if (newWindows.length > 0) {\n        setActiveWindowId(newWindows[newWindows.length - 1].id);\n      } else {\n        setActiveWindowId(null);\n      }\n      return newWindows;\n    });\n  }\n  function handleMinesweeperSuccess(level) {\n    setSolvedLevels(prevSolved => {\n      if (prevSolved.includes(level)) return prevSolved;\n\n      // only update if not already solved\n      setBugRemovalIndex(prev => {\n        const step = level === 4 ? bugCount : Math.floor(bugCount / 4);\n        return Math.min(prev + step, bugCount);\n      });\n      setVisibleFolderIndex(prev => Math.max(prev, level));\n      return [...prevSolved, level];\n    });\n  }\n\n  // Quiz modal logic is now handled by useEffect below\n\n  useEffect(() => {\n    var _quizzes$level$questi, _quizzes$level, _quizzes$level$hint, _quizzes$level2, _quizzes$level$answer, _quizzes$level3;\n    if (!requestedQuiz || quizWindowId !== null) return;\n    const {\n      level,\n      cell\n    } = requestedQuiz;\n    const id = nextWindowId.current++;\n    const quizzes = require(\"../../assets/data/quizzes.json\");\n    setQuizData({\n      level,\n      cell,\n      question: (_quizzes$level$questi = (_quizzes$level = quizzes[level]) === null || _quizzes$level === void 0 ? void 0 : _quizzes$level.question) !== null && _quizzes$level$questi !== void 0 ? _quizzes$level$questi : \"문제가 존재하지 않습니다.\",\n      hint: (_quizzes$level$hint = (_quizzes$level2 = quizzes[level]) === null || _quizzes$level2 === void 0 ? void 0 : _quizzes$level2.hint) !== null && _quizzes$level$hint !== void 0 ? _quizzes$level$hint : \"힌트 없음\",\n      answer: (_quizzes$level$answer = (_quizzes$level3 = quizzes[level]) === null || _quizzes$level3 === void 0 ? void 0 : _quizzes$level3.answer) !== null && _quizzes$level$answer !== void 0 ? _quizzes$level$answer : \"\"\n    });\n    setQuizWindowId(id);\n    setActiveWindowId(id);\n    setQuizWrongAttempts(0);\n    setQuizShowHint(false);\n    setWindows(prev => {\n      var _quizzes$level$questi2, _quizzes$level4, _quizzes$level$hint2, _quizzes$level5, _quizzes$level$answer2, _quizzes$level6;\n      return [...prev, {\n        id,\n        title: \"Quiz\",\n        content: /*#__PURE__*/_jsxDEV(QuizModal, {\n          level: level,\n          question: (_quizzes$level$questi2 = (_quizzes$level4 = quizzes[level]) === null || _quizzes$level4 === void 0 ? void 0 : _quizzes$level4.question) !== null && _quizzes$level$questi2 !== void 0 ? _quizzes$level$questi2 : \"문제가 존재하지 않습니다.\",\n          hint: (_quizzes$level$hint2 = (_quizzes$level5 = quizzes[level]) === null || _quizzes$level5 === void 0 ? void 0 : _quizzes$level5.hint) !== null && _quizzes$level$hint2 !== void 0 ? _quizzes$level$hint2 : \"힌트 없음\",\n          answer: (_quizzes$level$answer2 = (_quizzes$level6 = quizzes[level]) === null || _quizzes$level6 === void 0 ? void 0 : _quizzes$level6.answer) !== null && _quizzes$level$answer2 !== void 0 ? _quizzes$level$answer2 : \"\",\n          value: quizAnswer,\n          onChange: setQuizAnswer,\n          onSubmit: handleQuizSubmit,\n          onSkip: handleSkipQuiz,\n          wrongAttempts: quizWrongAttempts,\n          showHint: quizShowHint,\n          onClose: () => handleClose(id),\n          parentRef: screenRef,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }];\n    });\n    setRequestedQuiz(null);\n  }, [requestedQuiz, quizWindowId]);\n  function handleQuizSubmit() {\n    if (!quizData) return;\n    if (quizAnswer.trim() === quizData.answer) {\n      setQuizAnswer(\"\");\n      setQuizWindowId(null);\n      handleMinesweeperSuccess(quizData.level);\n      setWindows(prev => prev.filter(win => win.id !== quizWindowId));\n    } else {\n      setQuizWrongAttempts(prev => {\n        const next = prev + 1;\n        if (next >= 3) setQuizShowHint(true);\n        return next;\n      });\n    }\n  }\n  function handleSkipQuiz() {\n    if (!quizData) return;\n    setSkippedCount(prev => prev + 1);\n    setQuizAnswer(\"\");\n    setQuizWindowId(null);\n    setQuizShowHint(false);\n    handleMinesweeperSuccess(quizData.level);\n    setWindows(prev => prev.filter(win => win.id !== quizWindowId));\n  }\n  function handleFolderClick(label, level) {\n    const id = nextWindowId.current++;\n    const isSolved = solvedLevels.includes(level);\n    setWindows(prev => [...prev, {\n      id,\n      title: \"UglyWorld in_BUG\",\n      content: /*#__PURE__*/_jsxDEV(Minesweeper, {\n        level: level,\n        parentRef: screenRef,\n        onSelfClose: () => handleClose(id),\n        onSuccess: () => handleMinesweeperSuccess(level),\n        onSkipSuccess: () => handleMinesweeperSuccess(level),\n        solved: isSolved,\n        skippedCount: skippedCount,\n        setSkippedCount: setSkippedCount,\n        onFlagClick: cell => setRequestedQuiz({\n          level,\n          cell\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this)\n    }]);\n    setActiveWindowId(id);\n    se_error.play();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `mobile main-screen pre-fade ${fadeIn}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-screen__bug-background\",\n      children: [bugs, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-screen__folders\",\n        children: [\"프로그램 설치파일\", \"보안패치\", \"바이러스 샘플\", \"비밀 로그\"].map((label, index) => {\n          const isActive = index <= visibleFolderIndex;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"folder-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"folder-button\",\n              onClick: () => isActive && handleFolderClick(label, index + 1),\n              disabled: !isActive,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: isActive ? activatedImg : inactivatedImg,\n                alt: `${label} folder`,\n                className: \"folder-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-screen__screen\",\n        ref: screenRef,\n        children: windows.map(({\n          id,\n          title,\n          content\n        }) => /*#__PURE__*/_jsxDEV(Window, {\n          title: title,\n          parentRef: screenRef,\n          onClose: () => handleClose(id),\n          isActive: activeWindowId === id ? \"active\" : \"\",\n          draggable: true,\n          onClick: () => setActiveWindowId(id),\n          children: content\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n}\n_s(MainScreen, \"vvsgz8v00DQX4N6wcmoWzxTMRl0=\", false, function () {\n  return [useAgent];\n});\n_c = MainScreen;\nexport default MainScreen;\nvar _c;\n$RefreshReg$(_c, \"MainScreen\");","map":{"version":3,"names":["useEffect","useState","useRef","Minesweeper","useAgent","collection","query","where","getDocs","db","hashPassword","Window","QuizModal","Buttons","error","shutdown","Submits","activatedImg","inactivatedImg","jsxDEV","_jsxDEV","MainScreen","onNext","_s","fadeIn","setFadeIn","clickDisabled","setClickDisabled","setAgent","skippedCount","setSkippedCount","password","setPassword","loginError","setLoginError","windows","setWindows","activeWindowId","setActiveWindowId","nextWindowId","visibleFolderIndex","setVisibleFolderIndex","bugRemovalIndex","setBugRemovalIndex","solvedLevels","setSolvedLevels","quizData","setQuizData","quizAnswer","setQuizAnswer","quizWindowId","setQuizWindowId","quizWrongAttempts","setQuizWrongAttempts","quizShowHint","setQuizShowHint","requestedQuiz","setRequestedQuiz","bugCount","bugDataRef","Array","from","length","top","Math","random","left","size","bugs","current","map","data","i","className","style","fontSize","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","Boolean","handleLoginSubmit","e","preventDefault","hashed","q","snapshot","empty","_data$progress","doc","docs","id","progress","passwordHash","handleClick","handleClose","screenRef","se_error","Audio","se_shutdown","createWindowContent","label","title","content","fadeTimeout","setTimeout","clearTimeout","prev","play","newWindows","win","handleMinesweeperSuccess","level","prevSolved","includes","step","floor","min","max","_quizzes$level$questi","_quizzes$level","_quizzes$level$hint","_quizzes$level2","_quizzes$level$answer","_quizzes$level3","cell","quizzes","require","question","hint","answer","_quizzes$level$questi2","_quizzes$level4","_quizzes$level$hint2","_quizzes$level5","_quizzes$level$answer2","_quizzes$level6","value","onChange","onSubmit","handleQuizSubmit","onSkip","handleSkipQuiz","wrongAttempts","showHint","onClose","parentRef","autoFocus","trim","next","handleFolderClick","isSolved","onSelfClose","onSuccess","onSkipSuccess","solved","onFlagClick","index","isActive","onClick","disabled","src","alt","ref","draggable","_c","$RefreshReg$"],"sources":["/Users/maggy/Workspace/bugly-world/src/screens/MainScreen/MainScreen.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\nimport Minesweeper from \"../../components/Minesweeper/Minesweeper\";\n\n// 로그인용\nimport { useAgent } from \"../../contexts/AgentContext\";\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\nimport { db } from \"../../firebase\";\nimport { hashPassword } from \"../../utils/hash\";\n\nimport \"../../styles/layout.css\";\nimport \"../../styles/transition.css\";\nimport \"./mainScreen.css\";\nimport Window from \"../../components/Window\";\nimport QuizModal from \"../../components/QuizModal/QuizModal\";\nimport Buttons from \"../../components/Buttons\";\n\n// Sound\nimport error from \"../../assets/sounds/error sound.mp3\";\nimport shutdown from \"../../assets/sounds/shut down.mp3\";\nimport Submits from \"../../components/Submits\";\n\n// folder\nimport activatedImg from \"../../assets/images/activated-folder.png\";\nimport inactivatedImg from \"../../assets/images/inactivated-folder.png\";\n\nfunction MainScreen({ onNext }) {\n  const [fadeIn, setFadeIn] = useState(\"\");\n  const [clickDisabled, setClickDisabled] = useState(false);\n  const { setAgent, skippedCount, setSkippedCount } = useAgent();\n  const [password, setPassword] = useState(\"\");\n  const [loginError, setLoginError] = useState(\"\");\n  const [windows, setWindows] = useState([]);\n  const [activeWindowId, setActiveWindowId] = useState(null);\n  const nextWindowId = useRef(0);\n  const [visibleFolderIndex, setVisibleFolderIndex] = useState(0);\n  const [bugRemovalIndex, setBugRemovalIndex] = useState(0);\n  const [solvedLevels, setSolvedLevels] = useState([]);\n  // Quiz modal state\n  const [quizData, setQuizData] = useState(null);\n  const [quizAnswer, setQuizAnswer] = useState(\"\");\n  const [quizWindowId, setQuizWindowId] = useState(null);\n  const [quizWrongAttempts, setQuizWrongAttempts] = useState(0);\n  const [quizShowHint, setQuizShowHint] = useState(false);\n  const [requestedQuiz, setRequestedQuiz] = useState(null);\n\n  const bugCount = 150;\n  const bugDataRef = useRef(\n    Array.from({ length: bugCount }, () => ({\n      top: Math.random() * 90,\n      left: Math.random() * 90,\n      size: 1.5 + Math.random() * 1.5,\n    }))\n  );\n\n  const bugs = bugDataRef.current\n    .map((data, i) => {\n      if (i < bugRemovalIndex) return null;\n      return (\n        <span\n          key={i}\n          className=\"main-screen__bug-text\"\n          style={{\n            top: `${data.top}%`,\n            left: `${data.left}%`,\n            fontSize: `${data.size}vh`,\n          }}\n        >\n          BUG\n        </span>\n      );\n    })\n    .filter(Boolean);\n\n  async function handleLoginSubmit(e) {\n    e.preventDefault();\n    const hashed = await hashPassword(password);\n\n    const q = query(\n      collection(db, \"agents\"),\n      where(\"passwordHash\", \"==\", hashed)\n    );\n    const snapshot = await getDocs(q);\n\n    if (!snapshot.empty) {\n      const doc = snapshot.docs[0];\n      const data = doc.data();\n      setAgent({\n        id: doc.id,\n        progress: data.progress ?? 0,\n        passwordHash: hashed,\n      });\n      setLoginError(\"\");\n      handleClick();\n    } else {\n      setLoginError(\"요원코드가 올바르지 않습니다.\");\n      handleClose();\n    }\n  }\n\n  const screenRef = useRef(null);\n\n  const se_error = new Audio(error);\n  const se_shutdown = new Audio(shutdown);\n\n  function createWindowContent(label) {\n    return {\n      title: \"UglyWorld in_BUG\",\n      content: <div>{label} 내용입니다.</div>,\n    };\n  }\n\n  useEffect(() => {\n    const fadeTimeout = setTimeout(() => {\n      setFadeIn(\"fade-in\");\n    }, 50);\n\n    return () => {\n      clearTimeout(fadeTimeout);\n    };\n  }, []);\n\n  function handleClick() {\n    if (clickDisabled) return;\n    const id = nextWindowId.current++;\n    const { title, content } = createWindowContent(\"첫 번째 창\");\n    setWindows((prev) => [...prev, { id, title, content }]);\n    setActiveWindowId(id);\n    se_error.play();\n  }\n\n  function handleClose(id) {\n    setWindows((prev) => {\n      const newWindows = prev.filter((win) => win.id !== id);\n      if (newWindows.length > 0) {\n        setActiveWindowId(newWindows[newWindows.length - 1].id);\n      } else {\n        setActiveWindowId(null);\n      }\n      return newWindows;\n    });\n  }\n\n  function handleMinesweeperSuccess(level) {\n    setSolvedLevels((prevSolved) => {\n      if (prevSolved.includes(level)) return prevSolved;\n\n      // only update if not already solved\n      setBugRemovalIndex((prev) => {\n        const step = level === 4 ? bugCount : Math.floor(bugCount / 4);\n        return Math.min(prev + step, bugCount);\n      });\n      setVisibleFolderIndex((prev) => Math.max(prev, level));\n\n      return [...prevSolved, level];\n    });\n  }\n\n  // Quiz modal logic is now handled by useEffect below\n\n  useEffect(() => {\n    if (!requestedQuiz || quizWindowId !== null) return;\n\n    const { level, cell } = requestedQuiz;\n    const id = nextWindowId.current++;\n    const quizzes = require(\"../../assets/data/quizzes.json\");\n\n    setQuizData({\n      level,\n      cell,\n      question: quizzes[level]?.question ?? \"문제가 존재하지 않습니다.\",\n      hint: quizzes[level]?.hint ?? \"힌트 없음\",\n      answer: quizzes[level]?.answer ?? \"\",\n    });\n    setQuizWindowId(id);\n    setActiveWindowId(id);\n    setQuizWrongAttempts(0);\n    setQuizShowHint(false);\n    setWindows((prev) => [\n      ...prev,\n      {\n        id,\n        title: \"Quiz\",\n        content: (\n          <QuizModal\n            level={level}\n            question={quizzes[level]?.question ?? \"문제가 존재하지 않습니다.\"}\n            hint={quizzes[level]?.hint ?? \"힌트 없음\"}\n            answer={quizzes[level]?.answer ?? \"\"}\n            value={quizAnswer}\n            onChange={setQuizAnswer}\n            onSubmit={handleQuizSubmit}\n            onSkip={handleSkipQuiz}\n            wrongAttempts={quizWrongAttempts}\n            showHint={quizShowHint}\n            onClose={() => handleClose(id)}\n            parentRef={screenRef}\n            autoFocus={true}\n          />\n        ),\n      },\n    ]);\n    setRequestedQuiz(null);\n  }, [requestedQuiz, quizWindowId]);\n\n  function handleQuizSubmit() {\n    if (!quizData) return;\n    if (quizAnswer.trim() === quizData.answer) {\n      setQuizAnswer(\"\");\n      setQuizWindowId(null);\n      handleMinesweeperSuccess(quizData.level);\n      setWindows((prev) => prev.filter((win) => win.id !== quizWindowId));\n    } else {\n      setQuizWrongAttempts((prev) => {\n        const next = prev + 1;\n        if (next >= 3) setQuizShowHint(true);\n        return next;\n      });\n    }\n  }\n\n  function handleSkipQuiz() {\n    if (!quizData) return;\n    setSkippedCount((prev) => prev + 1);\n    setQuizAnswer(\"\");\n    setQuizWindowId(null);\n    setQuizShowHint(false);\n    handleMinesweeperSuccess(quizData.level);\n    setWindows((prev) => prev.filter((win) => win.id !== quizWindowId));\n  }\n\n  function handleFolderClick(label, level) {\n    const id = nextWindowId.current++;\n    const isSolved = solvedLevels.includes(level);\n    setWindows((prev) => [\n      ...prev,\n      {\n        id,\n        title: \"UglyWorld in_BUG\",\n        content: (\n          <Minesweeper\n            level={level}\n            parentRef={screenRef}\n            onSelfClose={() => handleClose(id)}\n            onSuccess={() => handleMinesweeperSuccess(level)}\n            onSkipSuccess={() => handleMinesweeperSuccess(level)}\n            solved={isSolved}\n            skippedCount={skippedCount}\n            setSkippedCount={setSkippedCount}\n            onFlagClick={(cell) => setRequestedQuiz({ level, cell })}\n          />\n        ),\n      },\n    ]);\n    setActiveWindowId(id);\n    se_error.play();\n  }\n\n  return (\n    <div className={`mobile main-screen pre-fade ${fadeIn}`}>\n      <div className=\"main-screen__bug-background\">\n        {bugs}\n        <div className=\"main-screen__folders\">\n          {[\"프로그램 설치파일\", \"보안패치\", \"바이러스 샘플\", \"비밀 로그\"].map(\n            (label, index) => {\n              const isActive = index <= visibleFolderIndex;\n              return (\n                <div key={index} className=\"folder-wrapper\">\n                  <button\n                    className=\"folder-button\"\n                    onClick={() =>\n                      isActive && handleFolderClick(label, index + 1)\n                    }\n                    disabled={!isActive}\n                  >\n                    <img\n                      src={isActive ? activatedImg : inactivatedImg}\n                      alt={`${label} folder`}\n                      className=\"folder-icon\"\n                    />\n                  </button>\n                  <span>{label}</span>\n                </div>\n              );\n            }\n          )}\n        </div>\n        <div className=\"main-screen__screen\" ref={screenRef}>\n          {windows.map(({ id, title, content }) => (\n            <Window\n              key={id}\n              title={title}\n              parentRef={screenRef}\n              onClose={() => handleClose(id)}\n              isActive={activeWindowId === id ? \"active\" : \"\"}\n              draggable={true}\n              onClick={() => setActiveWindowId(id)}\n            >\n              {content}\n            </Window>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MainScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}