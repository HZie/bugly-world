{"ast":null,"code":"var _jsxFileName = \"/Users/maggy/Workspace/bugly-world/src/screens/ComputerScreen/ComputerScreen.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport \"../../styles/layout.css\";\nimport \"../../styles/transition.css\";\nimport \"./computerScreen.css\";\nimport Window from \"../../components/Window\";\nimport Buttons from \"../../components/Buttons\";\n\n// Sound\nimport error from \"../../assets/sounds/error sound.mp3\";\nimport shutdown from \"../../assets/sounds/shut down.mp3\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ComputerScreen({\n  onNext\n}) {\n  _s();\n  const [fadeIn, setFadeIn] = useState(\"\");\n  // activeWindows: 현재 표시된 창 인스턴스를 관리하는 배열\n  const [activeWindows, setActiveWindows] = useState([{\n    contentIndex: 0,\n    key: Date.now()\n  }]);\n  const se_error = new Audio(error);\n\n  // fadeIn 효과 설정\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setFadeIn(\"fade-in\");\n    }, 50);\n    return () => clearTimeout(timeout);\n  }, []);\n\n  // 자동으로 창을 추가하는 효과 (예시: 1초 후 다음 창 추가)\n  useEffect(() => {\n    if (activeWindows.length < 0) {\n      const timer = setTimeout(() => {\n        addWindow(activeWindows.length);\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [activeWindows]);\n\n  // 일반 버튼 클릭 시: 오직 가장 위의 창의 버튼만 활성화되어 있으므로, handleClick은 최상위 창에만 동작함.\n  function handleClick() {\n    const nextIndex = activeWindows.length;\n    if (nextIndex < windowsData.length) {\n      addWindow(nextIndex);\n    } else {\n      onNext && onNext();\n    }\n  }\n\n  // 새 창 추가 및 기존 창들의 클릭 가능성 해제\n  function addWindow(contentIndex) {\n    setActiveWindows(prev => {\n      // 모든 기존 창의 clickable은 false로 처리\n      // (아래에서는 windowsData.content 함수에 전달할 인자로 사용)\n      return [...prev.map(win => ({\n        ...win,\n        clickable: false\n      })), {\n        contentIndex,\n        clickable: true,\n        key: Date.now() + Math.random()\n      }];\n    });\n    se_error.play();\n  }\n\n  // X 버튼 클릭 시: 해당 창은 그대로 유지하면서, 동일한 내용의 새로운 창(duplicate)을 추가\n  function handleWindowClose(index) {\n    se_error.play();\n    setActiveWindows(prev => {\n      const updated = prev.map(win => ({\n        ...win,\n        clickable: false\n      }));\n      const duplicate = {\n        contentIndex: prev[index].contentIndex,\n        clickable: true,\n        key: Date.now() + Math.random()\n      };\n      return [...updated, duplicate];\n    });\n  }\n\n  // 창 데이터 배열: content는 함수 형태로, 인자로 'clickable' 여부를 받아 버튼에 onClick을 설정할지 결정합니다.\n  const windowsData = [{\n    title: \"UglyWorld in_BUG\",\n    content: clickable => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uC694\\uC6D0\\uC774\\uC2ED\\uB2C8\\uAE4C?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Buttons, {\n          onClick: clickable ? handleClick : undefined,\n          children: \"\\uC608\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n          onClick: clickable ? handleClick : undefined,\n          children: \"\\uC544\\uB2C8\\uC624\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, {\n    title: \"UglyWorld in_BUG\",\n    content: clickable => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uC694\\uC6D0 \\uCF54\\uB4DC\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, {\n    title: \"UglyWorld in_BUG\",\n    content: clickable => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"vaccine-alert\",\n        onClick: clickable ? handleClick : undefined,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vaccine-alert__start\",\n          children: \"START\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vaccine-alert__vaccinate\",\n          children: \"VACCINATE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, {\n    title: \"UglyWorld in_BUG\",\n    content: () => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"\\uBC31\\uC2E0 \\uD504\\uB85C\\uADF8\\uB7A8\\uC744 \\uAC00\\uB3D9\\uD569\\uB2C8\\uB2E4. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 27\n      }, this), \"\\uAC15\\uC81C\\uC885\\uB8CC\\uD558\\uC9C0 \\uB9C8\\uC138\\uC694. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 23\n      }, this), \"(\\uC7A0\\uAE08\\uD654\\uBA74 \\uD3EC\\uD568)\"]\n    }, void 0, true)\n  }];\n  const screenRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `mobile computer-screen pre-fade ${fadeIn}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen\",\n      ref: screenRef,\n      children: activeWindows.map((win, index) => {\n        // 오직 가장 위에 있는 창만 clickable로 전달\n        const isTop = index === activeWindows.length - 1;\n        return /*#__PURE__*/_jsxDEV(Window, {\n          title: windowsData[win.contentIndex].title,\n          parentRef: screenRef\n          // onClick은 오직 최상위 창에만 전달 (버튼 내 onClick은 windowsData 함수 내에서 설정)\n          ,\n          onClick: isTop ? handleClick : undefined,\n          onClose: () => handleWindowClose(index),\n          children: windowsData[win.contentIndex].content(isTop)\n        }, `${win.key}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(ComputerScreen, \"DN/sxObdd914UPFLl4SWQk6UpPQ=\");\n_c = ComputerScreen;\nexport default ComputerScreen;\nvar _c;\n$RefreshReg$(_c, \"ComputerScreen\");","map":{"version":3,"names":["useEffect","useState","useRef","Window","Buttons","error","shutdown","jsxDEV","_jsxDEV","Fragment","_Fragment","ComputerScreen","onNext","_s","fadeIn","setFadeIn","activeWindows","setActiveWindows","contentIndex","key","Date","now","se_error","Audio","timeout","setTimeout","clearTimeout","length","timer","addWindow","handleClick","nextIndex","windowsData","prev","map","win","clickable","Math","random","play","handleWindowClose","index","updated","duplicate","title","content","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","undefined","type","value","className","screenRef","ref","isTop","parentRef","onClose","_c","$RefreshReg$"],"sources":["/Users/maggy/Workspace/bugly-world/src/screens/ComputerScreen/ComputerScreen.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\nimport \"../../styles/layout.css\";\nimport \"../../styles/transition.css\";\nimport \"./computerScreen.css\";\nimport Window from \"../../components/Window\";\nimport Buttons from \"../../components/Buttons\";\n\n// Sound\nimport error from \"../../assets/sounds/error sound.mp3\";\nimport shutdown from \"../../assets/sounds/shut down.mp3\";\n\nfunction ComputerScreen({ onNext }) {\n  const [fadeIn, setFadeIn] = useState(\"\");\n  // activeWindows: 현재 표시된 창 인스턴스를 관리하는 배열\n  const [activeWindows, setActiveWindows] = useState([\n    { contentIndex: 0, key: Date.now() },\n  ]);\n  const se_error = new Audio(error);\n\n  // fadeIn 효과 설정\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setFadeIn(\"fade-in\");\n    }, 50);\n    return () => clearTimeout(timeout);\n  }, []);\n\n  // 자동으로 창을 추가하는 효과 (예시: 1초 후 다음 창 추가)\n  useEffect(() => {\n    if (activeWindows.length < 0) {\n      const timer = setTimeout(() => {\n        addWindow(activeWindows.length);\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [activeWindows]);\n\n  // 일반 버튼 클릭 시: 오직 가장 위의 창의 버튼만 활성화되어 있으므로, handleClick은 최상위 창에만 동작함.\n  function handleClick() {\n    const nextIndex = activeWindows.length;\n    if (nextIndex < windowsData.length) {\n      addWindow(nextIndex);\n    } else {\n      onNext && onNext();\n    }\n  }\n\n  // 새 창 추가 및 기존 창들의 클릭 가능성 해제\n  function addWindow(contentIndex) {\n    setActiveWindows((prev) => {\n      // 모든 기존 창의 clickable은 false로 처리\n      // (아래에서는 windowsData.content 함수에 전달할 인자로 사용)\n      return [\n        ...prev.map((win) => ({ ...win, clickable: false })),\n        { contentIndex, clickable: true, key: Date.now() + Math.random() },\n      ];\n    });\n    se_error.play();\n  }\n\n  // X 버튼 클릭 시: 해당 창은 그대로 유지하면서, 동일한 내용의 새로운 창(duplicate)을 추가\n  function handleWindowClose(index) {\n    se_error.play();\n    setActiveWindows((prev) => {\n      const updated = prev.map((win) => ({ ...win, clickable: false }));\n      const duplicate = {\n        contentIndex: prev[index].contentIndex,\n        clickable: true,\n        key: Date.now() + Math.random(),\n      };\n      return [...updated, duplicate];\n    });\n  }\n\n  // 창 데이터 배열: content는 함수 형태로, 인자로 'clickable' 여부를 받아 버튼에 onClick을 설정할지 결정합니다.\n  const windowsData = [\n    {\n      title: \"UglyWorld in_BUG\",\n      content: (clickable) => (\n        <>\n          <span>요원이십니까?</span>\n          <div>\n            <Buttons onClick={clickable ? handleClick : undefined}>예</Buttons>\n            <Buttons onClick={clickable ? handleClick : undefined}>\n              아니오\n            </Buttons>\n          </div>\n        </>\n      ),\n    },\n    {\n      title: \"UglyWorld in_BUG\",\n      content: (clickable) => (\n        <>\n          <span>요원 코드를 입력해주세요.</span>\n          <input type=\"password\" />\n          <input type=\"submit\" value=\"로그인\" />\n        </>\n      ),\n    },\n    {\n      title: \"UglyWorld in_BUG\",\n      content: (clickable) => (\n        <>\n          <button\n            className=\"vaccine-alert\"\n            onClick={clickable ? handleClick : undefined}\n          >\n            <div className=\"vaccine-alert__start\">START</div>\n            <div className=\"vaccine-alert__vaccinate\">VACCINATE</div>\n          </button>\n        </>\n      ),\n    },\n    {\n      title: \"UglyWorld in_BUG\",\n      content: () => (\n        <>\n          백신 프로그램을 가동합니다. <br />\n          강제종료하지 마세요. <br />\n          (잠금화면 포함)\n        </>\n      ),\n    },\n  ];\n\n  const screenRef = useRef(null);\n\n  return (\n    <div className={`mobile computer-screen pre-fade ${fadeIn}`}>\n      <div className=\"screen\" ref={screenRef}>\n        {activeWindows.map((win, index) => {\n          // 오직 가장 위에 있는 창만 clickable로 전달\n          const isTop = index === activeWindows.length - 1;\n          return (\n            <Window\n              key={`${win.key}`}\n              title={windowsData[win.contentIndex].title}\n              parentRef={screenRef}\n              // onClick은 오직 최상위 창에만 전달 (버튼 내 onClick은 windowsData 함수 내에서 설정)\n              onClick={isTop ? handleClick : undefined}\n              onClose={() => handleWindowClose(index)}\n            >\n              {windowsData[win.contentIndex].content(isTop)}\n            </Window>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default ComputerScreen;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAO,yBAAyB;AAChC,OAAO,6BAA6B;AACpC,OAAO,sBAAsB;AAC7B,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,OAAO,MAAM,0BAA0B;;AAE9C;AACA,OAAOC,KAAK,MAAM,qCAAqC;AACvD,OAAOC,QAAQ,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzD,SAASC,cAAcA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxC;EACA,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,CACjD;IAAEiB,YAAY,EAAE,CAAC;IAAEC,GAAG,EAAEC,IAAI,CAACC,GAAG,CAAC;EAAE,CAAC,CACrC,CAAC;EACF,MAAMC,QAAQ,GAAG,IAAIC,KAAK,CAAClB,KAAK,CAAC;;EAEjC;EACAL,SAAS,CAAC,MAAM;IACd,MAAMwB,OAAO,GAAGC,UAAU,CAAC,MAAM;MAC/BV,SAAS,CAAC,SAAS,CAAC;IACtB,CAAC,EAAE,EAAE,CAAC;IACN,OAAO,MAAMW,YAAY,CAACF,OAAO,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAxB,SAAS,CAAC,MAAM;IACd,IAAIgB,aAAa,CAACW,MAAM,GAAG,CAAC,EAAE;MAC5B,MAAMC,KAAK,GAAGH,UAAU,CAAC,MAAM;QAC7BI,SAAS,CAACb,aAAa,CAACW,MAAM,CAAC;MACjC,CAAC,EAAE,IAAI,CAAC;MACR,OAAO,MAAMD,YAAY,CAACE,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAACZ,aAAa,CAAC,CAAC;;EAEnB;EACA,SAASc,WAAWA,CAAA,EAAG;IACrB,MAAMC,SAAS,GAAGf,aAAa,CAACW,MAAM;IACtC,IAAII,SAAS,GAAGC,WAAW,CAACL,MAAM,EAAE;MAClCE,SAAS,CAACE,SAAS,CAAC;IACtB,CAAC,MAAM;MACLnB,MAAM,IAAIA,MAAM,CAAC,CAAC;IACpB;EACF;;EAEA;EACA,SAASiB,SAASA,CAACX,YAAY,EAAE;IAC/BD,gBAAgB,CAAEgB,IAAI,IAAK;MACzB;MACA;MACA,OAAO,CACL,GAAGA,IAAI,CAACC,GAAG,CAAEC,GAAG,KAAM;QAAE,GAAGA,GAAG;QAAEC,SAAS,EAAE;MAAM,CAAC,CAAC,CAAC,EACpD;QAAElB,YAAY;QAAEkB,SAAS,EAAE,IAAI;QAAEjB,GAAG,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGgB,IAAI,CAACC,MAAM,CAAC;MAAE,CAAC,CACnE;IACH,CAAC,CAAC;IACFhB,QAAQ,CAACiB,IAAI,CAAC,CAAC;EACjB;;EAEA;EACA,SAASC,iBAAiBA,CAACC,KAAK,EAAE;IAChCnB,QAAQ,CAACiB,IAAI,CAAC,CAAC;IACftB,gBAAgB,CAAEgB,IAAI,IAAK;MACzB,MAAMS,OAAO,GAAGT,IAAI,CAACC,GAAG,CAAEC,GAAG,KAAM;QAAE,GAAGA,GAAG;QAAEC,SAAS,EAAE;MAAM,CAAC,CAAC,CAAC;MACjE,MAAMO,SAAS,GAAG;QAChBzB,YAAY,EAAEe,IAAI,CAACQ,KAAK,CAAC,CAACvB,YAAY;QACtCkB,SAAS,EAAE,IAAI;QACfjB,GAAG,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGgB,IAAI,CAACC,MAAM,CAAC;MAChC,CAAC;MACD,OAAO,CAAC,GAAGI,OAAO,EAAEC,SAAS,CAAC;IAChC,CAAC,CAAC;EACJ;;EAEA;EACA,MAAMX,WAAW,GAAG,CAClB;IACEY,KAAK,EAAE,kBAAkB;IACzBC,OAAO,EAAGT,SAAS,iBACjB5B,OAAA,CAAAE,SAAA;MAAAoC,QAAA,gBACEtC,OAAA;QAAAsC,QAAA,EAAM;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACpB1C,OAAA;QAAAsC,QAAA,gBACEtC,OAAA,CAACJ,OAAO;UAAC+C,OAAO,EAAEf,SAAS,GAAGN,WAAW,GAAGsB,SAAU;UAAAN,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAClE1C,OAAA,CAACJ,OAAO;UAAC+C,OAAO,EAAEf,SAAS,GAAGN,WAAW,GAAGsB,SAAU;UAAAN,QAAA,EAAC;QAEvD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA,eACN;EAEN,CAAC,EACD;IACEN,KAAK,EAAE,kBAAkB;IACzBC,OAAO,EAAGT,SAAS,iBACjB5B,OAAA,CAAAE,SAAA;MAAAoC,QAAA,gBACEtC,OAAA;QAAAsC,QAAA,EAAM;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC3B1C,OAAA;QAAO6C,IAAI,EAAC;MAAU;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzB1C,OAAA;QAAO6C,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAC;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACnC;EAEN,CAAC,EACD;IACEN,KAAK,EAAE,kBAAkB;IACzBC,OAAO,EAAGT,SAAS,iBACjB5B,OAAA,CAAAE,SAAA;MAAAoC,QAAA,eACEtC,OAAA;QACE+C,SAAS,EAAC,eAAe;QACzBJ,OAAO,EAAEf,SAAS,GAAGN,WAAW,GAAGsB,SAAU;QAAAN,QAAA,gBAE7CtC,OAAA;UAAK+C,SAAS,EAAC,sBAAsB;UAAAT,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACjD1C,OAAA;UAAK+C,SAAS,EAAC,0BAA0B;UAAAT,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD;IAAC,gBACT;EAEN,CAAC,EACD;IACEN,KAAK,EAAE,kBAAkB;IACzBC,OAAO,EAAEA,CAAA,kBACPrC,OAAA,CAAAE,SAAA;MAAAoC,QAAA,GAAE,8EACgB,eAAAtC,OAAA;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,6DACV,eAAA1C,OAAA;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,2CAEpB;IAAA,eAAE;EAEN,CAAC,CACF;EAED,MAAMM,SAAS,GAAGtD,MAAM,CAAC,IAAI,CAAC;EAE9B,oBACEM,OAAA;IAAK+C,SAAS,EAAE,mCAAmCzC,MAAM,EAAG;IAAAgC,QAAA,eAC1DtC,OAAA;MAAK+C,SAAS,EAAC,QAAQ;MAACE,GAAG,EAAED,SAAU;MAAAV,QAAA,EACpC9B,aAAa,CAACkB,GAAG,CAAC,CAACC,GAAG,EAAEM,KAAK,KAAK;QACjC;QACA,MAAMiB,KAAK,GAAGjB,KAAK,KAAKzB,aAAa,CAACW,MAAM,GAAG,CAAC;QAChD,oBACEnB,OAAA,CAACL,MAAM;UAELyC,KAAK,EAAEZ,WAAW,CAACG,GAAG,CAACjB,YAAY,CAAC,CAAC0B,KAAM;UAC3Ce,SAAS,EAAEH;UACX;UAAA;UACAL,OAAO,EAAEO,KAAK,GAAG5B,WAAW,GAAGsB,SAAU;UACzCQ,OAAO,EAAEA,CAAA,KAAMpB,iBAAiB,CAACC,KAAK,CAAE;UAAAK,QAAA,EAEvCd,WAAW,CAACG,GAAG,CAACjB,YAAY,CAAC,CAAC2B,OAAO,CAACa,KAAK;QAAC,GAPxC,GAAGvB,GAAG,CAAChB,GAAG,EAAE;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQX,CAAC;MAEb,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrC,EAAA,CA3IQF,cAAc;AAAAkD,EAAA,GAAdlD,cAAc;AA6IvB,eAAeA,cAAc;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}