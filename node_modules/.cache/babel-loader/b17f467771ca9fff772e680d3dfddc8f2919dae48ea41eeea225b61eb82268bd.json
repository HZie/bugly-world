{"ast":null,"code":"var _jsxFileName = \"/Users/maggy/Workspace/bugly-world/src/screens/BugFound/BugFound.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport backgroundImage from \"../../assets/images/urdy.png\";\n\n// styles\nimport \"../../styles/global.css\";\nimport \"../../styles/layout.css\";\nimport \"../../styles/typography.css\";\nimport \"../../styles/transition.css\";\nimport \"./bugFound.css\";\n\n//sound\nimport start from \"../../assets/sounds/computer start.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BugFound({\n  onNext,\n  audioRef\n}) {\n  _s();\n  // 시간 표시\n  const [time, setTime] = useState(new Date());\n  useEffect(() => {\n    // 1초마다 현재 시간 업데이트\n    const timer = setInterval(() => {\n      setTime(new Date());\n    }, 500);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  // 날짜 포맷: YYYY-MM-DD\n  const year = time.getFullYear();\n  const month = String(time.getMonth() + 1).padStart(2, \"0\");\n  const day = String(time.getDate()).padStart(2, \"0\");\n  const formattedDate = `${year}-${month}-${day}`;\n\n  // 시간 포맷: HH:MM:ss\n  const timeParts = time.toTimeString().split(\" \")[0].split(\":\");\n  const hoursMinutes = `${timeParts[0]}:${timeParts[1]}`; // HH:MM\n  const seconds = timeParts[2]; // ss\n\n  // 소리\n  const se_start = new Audio(start);\n  const handleClick = () => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n      audioRef.current = null; // 다음 재생 대비\n    }\n    const se_start = new Audio(start);\n    se_start.play(se_start);\n    onNext();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mobile bug-screen background-glitch\",\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"warning\",\n        children: \"\\uBC00\\uB808\\uB2C8\\uC5C4 \\uBC84\\uADF8 \\uBC1C\\uACAC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date\",\n        children: formattedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hoursMinutes\",\n          children: hoursMinutes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"seconds\",\n          children: [\" \", seconds]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bug\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bugTitle\",\n        children: \"VIRUS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bugName\",\n        children: \"URDY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(BugFound, \"I0+7QaEsXHXB0XO5JypI3yBHjPI=\");\n_c = BugFound;\nexport default BugFound;\nvar _c;\n$RefreshReg$(_c, \"BugFound\");","map":{"version":3,"names":["useEffect","useState","useRef","backgroundImage","start","jsxDEV","_jsxDEV","BugFound","onNext","audioRef","_s","time","setTime","Date","timer","setInterval","clearInterval","year","getFullYear","month","String","getMonth","padStart","day","getDate","formattedDate","timeParts","toTimeString","split","hoursMinutes","seconds","se_start","Audio","handleClick","current","pause","currentTime","play","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maggy/Workspace/bugly-world/src/screens/BugFound/BugFound.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\nimport backgroundImage from \"../../assets/images/urdy.png\";\n\n// styles\nimport \"../../styles/global.css\";\nimport \"../../styles/layout.css\";\nimport \"../../styles/typography.css\";\nimport \"../../styles/transition.css\";\nimport \"./bugFound.css\";\n\n//sound\nimport start from \"../../assets/sounds/computer start.mp3\";\n\nfunction BugFound({ onNext, audioRef }) {\n  // 시간 표시\n  const [time, setTime] = useState(new Date());\n\n  useEffect(() => {\n    // 1초마다 현재 시간 업데이트\n    const timer = setInterval(() => {\n      setTime(new Date());\n    }, 500);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  // 날짜 포맷: YYYY-MM-DD\n  const year = time.getFullYear();\n  const month = String(time.getMonth() + 1).padStart(2, \"0\");\n  const day = String(time.getDate()).padStart(2, \"0\");\n  const formattedDate = `${year}-${month}-${day}`;\n\n  // 시간 포맷: HH:MM:ss\n  const timeParts = time.toTimeString().split(\" \")[0].split(\":\");\n  const hoursMinutes = `${timeParts[0]}:${timeParts[1]}`; // HH:MM\n  const seconds = timeParts[2]; // ss\n\n  // 소리\n  const se_start = new Audio(start);\n\n  const handleClick = () => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n      audioRef.current = null; // 다음 재생 대비\n    }\n\n    const se_start = new Audio(start);\n    se_start.play(se_start);\n    onNext();\n  };\n\n  return (\n    <div className=\"mobile bug-screen background-glitch\" onClick={handleClick}>\n      <div className=\"overlay\">\n        <div className=\"warning\">밀레니엄 버그 발견</div>\n        <div className=\"date\">{formattedDate}</div>\n        <div className=\"time\">\n          <span className=\"hoursMinutes\">{hoursMinutes}</span>\n          <span className=\"seconds\"> {seconds}</span>\n        </div>\n      </div>\n      <div className=\"bug\">\n        <span className=\"bugTitle\">VIRUS</span>\n        <span className=\"bugName\">URDY</span>\n      </div>\n    </div>\n  );\n}\n\nexport default BugFound;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAOC,eAAe,MAAM,8BAA8B;;AAE1D;AACA,OAAO,yBAAyB;AAChC,OAAO,yBAAyB;AAChC,OAAO,6BAA6B;AACpC,OAAO,6BAA6B;AACpC,OAAO,gBAAgB;;AAEvB;AACA,OAAOC,KAAK,MAAM,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,QAAQA,CAAC;EAAEC,MAAM;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACtC;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAIY,IAAI,CAAC,CAAC,CAAC;EAE5Cb,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9BH,OAAO,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;IACrB,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAM;MACXG,aAAa,CAACF,KAAK,CAAC;IACtB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,IAAI,GAAGN,IAAI,CAACO,WAAW,CAAC,CAAC;EAC/B,MAAMC,KAAK,GAAGC,MAAM,CAACT,IAAI,CAACU,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC1D,MAAMC,GAAG,GAAGH,MAAM,CAACT,IAAI,CAACa,OAAO,CAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACnD,MAAMG,aAAa,GAAG,GAAGR,IAAI,IAAIE,KAAK,IAAII,GAAG,EAAE;;EAE/C;EACA,MAAMG,SAAS,GAAGf,IAAI,CAACgB,YAAY,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC;EAC9D,MAAMC,YAAY,GAAG,GAAGH,SAAS,CAAC,CAAC,CAAC,IAAIA,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EACxD,MAAMI,OAAO,GAAGJ,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE9B;EACA,MAAMK,QAAQ,GAAG,IAAIC,KAAK,CAAC5B,KAAK,CAAC;EAEjC,MAAM6B,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIxB,QAAQ,CAACyB,OAAO,EAAE;MACpBzB,QAAQ,CAACyB,OAAO,CAACC,KAAK,CAAC,CAAC;MACxB1B,QAAQ,CAACyB,OAAO,CAACE,WAAW,GAAG,CAAC;MAChC3B,QAAQ,CAACyB,OAAO,GAAG,IAAI,CAAC,CAAC;IAC3B;IAEA,MAAMH,QAAQ,GAAG,IAAIC,KAAK,CAAC5B,KAAK,CAAC;IACjC2B,QAAQ,CAACM,IAAI,CAACN,QAAQ,CAAC;IACvBvB,MAAM,CAAC,CAAC;EACV,CAAC;EAED,oBACEF,OAAA;IAAKgC,SAAS,EAAC,qCAAqC;IAACC,OAAO,EAAEN,WAAY;IAAAO,QAAA,gBACxElC,OAAA;MAAKgC,SAAS,EAAC,SAAS;MAAAE,QAAA,gBACtBlC,OAAA;QAAKgC,SAAS,EAAC,SAAS;QAAAE,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzCtC,OAAA;QAAKgC,SAAS,EAAC,MAAM;QAAAE,QAAA,EAAEf;MAAa;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC3CtC,OAAA;QAAKgC,SAAS,EAAC,MAAM;QAAAE,QAAA,gBACnBlC,OAAA;UAAMgC,SAAS,EAAC,cAAc;UAAAE,QAAA,EAAEX;QAAY;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpDtC,OAAA;UAAMgC,SAAS,EAAC,SAAS;UAAAE,QAAA,GAAC,GAAC,EAACV,OAAO;QAAA;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNtC,OAAA;MAAKgC,SAAS,EAAC,KAAK;MAAAE,QAAA,gBAClBlC,OAAA;QAAMgC,SAAS,EAAC,UAAU;QAAAE,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvCtC,OAAA;QAAMgC,SAAS,EAAC,SAAS;QAAAE,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClC,EAAA,CAzDQH,QAAQ;AAAAsC,EAAA,GAARtC,QAAQ;AA2DjB,eAAeA,QAAQ;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}