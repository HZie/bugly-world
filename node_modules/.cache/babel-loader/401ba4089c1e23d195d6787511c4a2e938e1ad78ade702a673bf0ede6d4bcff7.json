{"ast":null,"code":"var _jsxFileName = \"/Users/maggy/Workspace/bugly-world/src/BugFound.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport backgroundImage from \"./assets/urdy.png\";\n\n// styles\nimport \"./styles/global.css\";\nimport \"./styles/layout.css\";\nimport \"./styles/typography.css\";\nimport \"./styles/bugFound.css\";\n\n//sound\nimport bgm from \"./assets/sounds/opening bgm.mp3\";\nimport start from \"./assets/sounds/computer start.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BugFound({\n  onNext\n}) {\n  _s();\n  // 시간 표시\n  const [time, setTime] = useState(new Date());\n  // 클릭 여부\n  const [clickedOnce, setClickedOnce] = useState(false);\n  useEffect(() => {\n    // 1초마다 현재 시간 업데이트\n    const timer = setInterval(() => {\n      setTime(new Date());\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  // 날짜 포맷: YYYY-MM-DD\n  const formattedDate = time.toISOString().split(\"T\")[0];\n\n  // 시간 포맷: HH:MM:ss\n  const timeParts = time.toTimeString().split(\" \")[0].split(\":\");\n  const hoursMinutes = `${timeParts[0]}:${timeParts[1]}`; // HH:MM\n  const seconds = timeParts[2]; // ss\n\n  // 소리\n  const audioRef = useRef(null);\n  const se_bgm = new Audio(bgm);\n  const se_start = new Audio(start);\n  const handleClick = () => {\n    if (!clickedOnce) {\n      // 첫번째 클릭\n      const se_bgm = new Audio(bgm);\n      se_bgm.loop = true;\n      se_bgm.play();\n      audioRef.current = se_bgm;\n      setClickedOnce(true);\n    } else {\n      if (audioRef.current) {\n        audioRef.current.pause();\n        audioRef.current.currentTime = 0;\n      }\n      const se_start = new Audio(start);\n      se_start.play(se_start);\n      onNext();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mobile\",\n    onClick: handleClick,\n    style: {\n      backgroundImage: `url(${backgroundImage})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"warning\",\n        children: \"\\uBC00\\uB808\\uB2C8\\uC5C4 \\uBC84\\uADF8 \\uBC1C\\uACAC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date\",\n        children: formattedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hoursMinutes\",\n          children: hoursMinutes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"seconds\",\n          children: [\" \", seconds]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bug\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bugTitle\",\n        children: \"VIRUS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bugName\",\n        children: \"URDY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(BugFound, \"K/w4rxJsm0cARuPGqZEUc1SW7uo=\");\n_c = BugFound;\nexport default BugFound;\nvar _c;\n$RefreshReg$(_c, \"BugFound\");","map":{"version":3,"names":["useEffect","useState","backgroundImage","bgm","start","jsxDEV","_jsxDEV","BugFound","onNext","_s","time","setTime","Date","clickedOnce","setClickedOnce","timer","setInterval","clearInterval","formattedDate","toISOString","split","timeParts","toTimeString","hoursMinutes","seconds","audioRef","useRef","se_bgm","Audio","se_start","handleClick","loop","play","current","pause","currentTime","className","onClick","style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maggy/Workspace/bugly-world/src/BugFound.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport backgroundImage from \"./assets/urdy.png\";\n\n// styles\nimport \"./styles/global.css\";\nimport \"./styles/layout.css\";\nimport \"./styles/typography.css\";\nimport \"./styles/bugFound.css\";\n\n//sound\nimport bgm from \"./assets/sounds/opening bgm.mp3\";\nimport start from \"./assets/sounds/computer start.mp3\";\n\nfunction BugFound({ onNext }) {\n  // 시간 표시\n  const [time, setTime] = useState(new Date());\n  // 클릭 여부\n  const [clickedOnce, setClickedOnce] = useState(false);\n\n  useEffect(() => {\n    // 1초마다 현재 시간 업데이트\n    const timer = setInterval(() => {\n      setTime(new Date());\n    }, 1000);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  // 날짜 포맷: YYYY-MM-DD\n  const formattedDate = time.toISOString().split(\"T\")[0];\n\n  // 시간 포맷: HH:MM:ss\n  const timeParts = time.toTimeString().split(\" \")[0].split(\":\");\n  const hoursMinutes = `${timeParts[0]}:${timeParts[1]}`; // HH:MM\n  const seconds = timeParts[2]; // ss\n\n  // 소리\n  const audioRef = useRef(null);\n  const se_bgm = new Audio(bgm);\n  const se_start = new Audio(start);\n\n  const handleClick = () => {\n    if (!clickedOnce) {\n      // 첫번째 클릭\n      const se_bgm = new Audio(bgm);\n      se_bgm.loop = true;\n      se_bgm.play();\n      audioRef.current = se_bgm;\n      setClickedOnce(true);\n    } else {\n      if (audioRef.current) {\n        audioRef.current.pause();\n        audioRef.current.currentTime = 0;\n      }\n\n      const se_start = new Audio(start);\n      se_start.play(se_start);\n      onNext();\n    }\n  };\n\n  return (\n    <div\n      className=\"mobile\"\n      onClick={handleClick}\n      style={{ backgroundImage: `url(${backgroundImage})` }}\n    >\n      <div className=\"overlay\">\n        <div className=\"warning\">밀레니엄 버그 발견</div>\n        <div className=\"date\">{formattedDate}</div>\n        <div className=\"time\">\n          <span className=\"hoursMinutes\">{hoursMinutes}</span>\n          <span className=\"seconds\"> {seconds}</span>\n        </div>\n      </div>\n      <div className=\"bug\">\n        <span className=\"bugTitle\">VIRUS</span>\n        <span className=\"bugName\">URDY</span>\n      </div>\n    </div>\n  );\n}\n\nexport default BugFound;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}