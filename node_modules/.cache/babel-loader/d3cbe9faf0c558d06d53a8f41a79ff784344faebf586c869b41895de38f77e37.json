{"ast":null,"code":"var _jsxFileName = \"/Users/maggy/Workspace/bugly-world/src/contexts/AgentContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/AgentContext.js\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AgentContext = /*#__PURE__*/createContext(null);\nexport const useAgent = () => {\n  _s();\n  return useContext(AgentContext);\n};\n_s(useAgent, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AgentProvider = ({\n  children\n}) => {\n  _s2();\n  const [agent, setAgentState] = useState(null); // 예: { id, progress, passwordHash }\n\n  // 실제 호출되는 setAgent 함수: localStorage에도 저장\n  const setAgent = data => {\n    setAgentState(data);\n    localStorage.setItem(\"agentData\", JSON.stringify(data));\n  };\n\n  // 새로고침 시 복구\n  useEffect(() => {\n    const stored = localStorage.getItem(\"agentData\");\n    if (stored) {\n      setAgentState(JSON.parse(stored));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AgentContext.Provider, {\n    value: {\n      agent,\n      setAgent\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s2(AgentProvider, \"AHJUZ1m/dENjr7OElgyHDHEkbAY=\");\n_c = AgentProvider;\nvar _c;\n$RefreshReg$(_c, \"AgentProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","AgentContext","useAgent","_s","AgentProvider","children","_s2","agent","setAgentState","setAgent","data","localStorage","setItem","JSON","stringify","stored","getItem","parse","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maggy/Workspace/bugly-world/src/contexts/AgentContext.js"],"sourcesContent":["// src/contexts/AgentContext.js\nimport { createContext, useContext, useEffect, useState } from \"react\";\n\nconst AgentContext = createContext(null);\nexport const useAgent = () => useContext(AgentContext);\n\nexport const AgentProvider = ({ children }) => {\n  const [agent, setAgentState] = useState(null); // 예: { id, progress, passwordHash }\n\n  // 실제 호출되는 setAgent 함수: localStorage에도 저장\n  const setAgent = (data) => {\n    setAgentState(data);\n    localStorage.setItem(\"agentData\", JSON.stringify(data));\n  };\n\n  // 새로고침 시 복구\n  useEffect(() => {\n    const stored = localStorage.getItem(\"agentData\");\n    if (stored) {\n      setAgentState(JSON.parse(stored));\n    }\n  }, []);\n  return (\n    <AgentContext.Provider value={{ agent, setAgent }}>\n      {children}\n    </AgentContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA;AACA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,YAAY,gBAAGN,aAAa,CAAC,IAAI,CAAC;AACxC,OAAO,MAAMO,QAAQ,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,YAAY,CAAC;AAAA;AAACE,EAAA,CAA1CD,QAAQ;AAErB,OAAO,MAAME,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE/C;EACA,MAAMW,QAAQ,GAAIC,IAAI,IAAK;IACzBF,aAAa,CAACE,IAAI,CAAC;IACnBC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;EACzD,CAAC;;EAED;EACAb,SAAS,CAAC,MAAM;IACd,MAAMkB,MAAM,GAAGJ,YAAY,CAACK,OAAO,CAAC,WAAW,CAAC;IAChD,IAAID,MAAM,EAAE;MACVP,aAAa,CAACK,IAAI,CAACI,KAAK,CAACF,MAAM,CAAC,CAAC;IACnC;EACF,CAAC,EAAE,EAAE,CAAC;EACN,oBACEf,OAAA,CAACC,YAAY,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEZ,KAAK;MAAEE;IAAS,CAAE;IAAAJ,QAAA,EAC/CA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACjB,GAAA,CArBWF,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}