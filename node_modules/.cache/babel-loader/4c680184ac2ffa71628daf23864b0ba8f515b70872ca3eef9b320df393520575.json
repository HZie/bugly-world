{"ast":null,"code":"var _jsxFileName = \"/Users/maggy/Workspace/bugly-world/src/screens/ComputerScreen/ComputerScreen.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport \"../../styles/layout.css\";\nimport \"../../styles/transition.css\";\nimport \"./computerScreen.css\";\nimport Window from \"../../components/Window\";\nimport Buttons from \"../../components/Buttons\";\n\n// Sound\nimport error from \"../../assets/sounds/error sound.mp3\";\nimport shutdown from \"../../assets/sounds/shut down.mp3\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ComputerScreen({\n  onNext\n}) {\n  _s();\n  const se_error = new Audio(error);\n\n  // windowsData: 창에 사용할 내용 (필요에 따라 순서를 조정)\n  const windowsData = [{\n    title: \"UglyWorld in_BUG\",\n    content: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uC694\\uC6D0\\uC774\\uC2ED\\uB2C8\\uAE4C?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Buttons, {\n          onClick: handleNormalClick,\n          children: \"\\uC608\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n          onClick: handleNormalClick,\n          children: \"\\uC544\\uB2C8\\uC624\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, {\n    title: \"UglyWorld in_BUG\",\n    content: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uC694\\uC6D0 \\uCF54\\uB4DC\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, {\n    title: \"UglyWorld in_BUG\",\n    content: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"vaccine-alert\",\n        onClick: handleNormalClick,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vaccine-alert__start\",\n          children: \"START\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vaccine-alert__vaccinate\",\n          children: \"VACCINATE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, {\n    title: \"UglyWorld in_BUG\",\n    content: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"\\uBC31\\uC2E0 \\uD504\\uB85C\\uADF8\\uB7A8\\uC744 \\uAC00\\uB3D9\\uD569\\uB2C8\\uB2E4. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 27\n      }, this), \"\\uAC15\\uC81C\\uC885\\uB8CC\\uD558\\uC9C0 \\uB9C8\\uC138\\uC694.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), \"(\\uC7A0\\uAE08\\uD654\\uBA74 \\uD3EC\\uD568)\"]\n    }, void 0, true)\n  }];\n\n  // activeWindows: 각 창 인스턴스 관리 (초기에는 첫 번째 창만)\n  const [activeWindows, setActiveWindows] = useState([{\n    contentIndex: 0,\n    clickable: true,\n    key: Date.now()\n  }]);\n\n  // 일반 버튼 클릭 시, 새로운 창을 추가하는 함수\n  function handleNormalClick() {\n    // 다음 창 인덱스 (순서대로 추가)\n    const nextIndex = activeWindows.length; // windowsData 순서대로라 가정\n    if (nextIndex < windowsData.length) {\n      addWindow(nextIndex);\n    } else {\n      // 모든 창이 추가되었으면, onNext 전환 등 처리 가능\n      onNext && onNext();\n    }\n  }\n\n  // 새로운 창을 추가하고, 기존 창들은 클릭 해제하는 함수\n  function addWindow(contentIndex) {\n    setActiveWindows(prev => {\n      // 기존 창들 clickable을 false로 변경\n      const updated = prev.map(win => ({\n        ...win,\n        clickable: false\n      }));\n      // 새 창 객체 생성\n      const newWindow = {\n        contentIndex,\n        clickable: true,\n        key: Date.now() + Math.random()\n      };\n      return [...updated, newWindow];\n    });\n    se_error.play();\n  }\n\n  // X 버튼 클릭 시, 해당 창의 내용을 복제하여 새 창을 추가하는 함수\n  function handleWindowClose(index) {\n    // duplicate the window at activeWindows[index]\n    setActiveWindows(prev => {\n      // 기존 모든 창의 clickable false로\n      const updated = prev.map(win => ({\n        ...win,\n        clickable: false\n      }));\n      const duplicate = {\n        contentIndex: prev[index].contentIndex,\n        clickable: true,\n        key: Date.now() + Math.random()\n      };\n      return [...updated, duplicate];\n    });\n    se_error.play();\n  }\n  const screenRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen\",\n    ref: screenRef,\n    children: activeWindows.map((win, index) => /*#__PURE__*/_jsxDEV(Window, {\n      title: windowsData[win.contentIndex].title,\n      parentRef: screenRef\n      // onClick만 새로 추가된 창(클릭 가능한 창)에 전달\n      ,\n      onClick: win.clickable ? handleNormalClick : undefined,\n      onClose: () => handleWindowClose(index),\n      children: windowsData[win.contentIndex].content\n    }, win.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(ComputerScreen, \"IXJaXkdBXkDq7jwEM9LlGSpjlWg=\");\n_c = ComputerScreen;\nexport default ComputerScreen;\nvar _c;\n$RefreshReg$(_c, \"ComputerScreen\");","map":{"version":3,"names":["useEffect","useState","useRef","Window","Buttons","error","shutdown","jsxDEV","_jsxDEV","Fragment","_Fragment","ComputerScreen","onNext","_s","se_error","Audio","windowsData","title","content","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","handleNormalClick","type","value","className","activeWindows","setActiveWindows","contentIndex","clickable","key","Date","now","nextIndex","length","addWindow","prev","updated","map","win","newWindow","Math","random","play","handleWindowClose","index","duplicate","screenRef","ref","parentRef","undefined","onClose","_c","$RefreshReg$"],"sources":["/Users/maggy/Workspace/bugly-world/src/screens/ComputerScreen/ComputerScreen.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\nimport \"../../styles/layout.css\";\nimport \"../../styles/transition.css\";\nimport \"./computerScreen.css\";\nimport Window from \"../../components/Window\";\nimport Buttons from \"../../components/Buttons\";\n\n// Sound\nimport error from \"../../assets/sounds/error sound.mp3\";\nimport shutdown from \"../../assets/sounds/shut down.mp3\";\n\nfunction ComputerScreen({ onNext }) {\n  const se_error = new Audio(error);\n\n  // windowsData: 창에 사용할 내용 (필요에 따라 순서를 조정)\n  const windowsData = [\n    {\n      title: \"UglyWorld in_BUG\",\n      content: (\n        <>\n          <span>요원이십니까?</span>\n          <div>\n            <Buttons onClick={handleNormalClick}>예</Buttons>\n            <Buttons onClick={handleNormalClick}>아니오</Buttons>\n          </div>\n        </>\n      ),\n    },\n    {\n      title: \"UglyWorld in_BUG\",\n      content: (\n        <>\n          <span>요원 코드를 입력해주세요.</span>\n          <input type=\"password\" />\n          <input type=\"submit\" value=\"로그인\" />\n        </>\n      ),\n    },\n    {\n      title: \"UglyWorld in_BUG\",\n      content: (\n        <>\n          <button className=\"vaccine-alert\" onClick={handleNormalClick}>\n            <div className=\"vaccine-alert__start\">START</div>\n            <div className=\"vaccine-alert__vaccinate\">VACCINATE</div>\n          </button>\n        </>\n      ),\n    },\n    {\n      title: \"UglyWorld in_BUG\",\n      content: (\n        <>\n          백신 프로그램을 가동합니다. <br />\n          강제종료하지 마세요.\n          <br />\n          (잠금화면 포함)\n        </>\n      ),\n    },\n  ];\n\n  // activeWindows: 각 창 인스턴스 관리 (초기에는 첫 번째 창만)\n  const [activeWindows, setActiveWindows] = useState([\n    { contentIndex: 0, clickable: true, key: Date.now() },\n  ]);\n\n  // 일반 버튼 클릭 시, 새로운 창을 추가하는 함수\n  function handleNormalClick() {\n    // 다음 창 인덱스 (순서대로 추가)\n    const nextIndex = activeWindows.length; // windowsData 순서대로라 가정\n    if (nextIndex < windowsData.length) {\n      addWindow(nextIndex);\n    } else {\n      // 모든 창이 추가되었으면, onNext 전환 등 처리 가능\n      onNext && onNext();\n    }\n  }\n\n  // 새로운 창을 추가하고, 기존 창들은 클릭 해제하는 함수\n  function addWindow(contentIndex) {\n    setActiveWindows((prev) => {\n      // 기존 창들 clickable을 false로 변경\n      const updated = prev.map((win) => ({ ...win, clickable: false }));\n      // 새 창 객체 생성\n      const newWindow = {\n        contentIndex,\n        clickable: true,\n        key: Date.now() + Math.random(),\n      };\n      return [...updated, newWindow];\n    });\n    se_error.play();\n  }\n\n  // X 버튼 클릭 시, 해당 창의 내용을 복제하여 새 창을 추가하는 함수\n  function handleWindowClose(index) {\n    // duplicate the window at activeWindows[index]\n    setActiveWindows((prev) => {\n      // 기존 모든 창의 clickable false로\n      const updated = prev.map((win) => ({ ...win, clickable: false }));\n      const duplicate = {\n        contentIndex: prev[index].contentIndex,\n        clickable: true,\n        key: Date.now() + Math.random(),\n      };\n      return [...updated, duplicate];\n    });\n    se_error.play();\n  }\n\n  const screenRef = useRef(null);\n\n  return (\n    <div className=\"screen\" ref={screenRef}>\n      {activeWindows.map((win, index) => (\n        <Window\n          key={win.key}\n          title={windowsData[win.contentIndex].title}\n          parentRef={screenRef}\n          // onClick만 새로 추가된 창(클릭 가능한 창)에 전달\n          onClick={win.clickable ? handleNormalClick : undefined}\n          onClose={() => handleWindowClose(index)}\n        >\n          {windowsData[win.contentIndex].content}\n        </Window>\n      ))}\n    </div>\n  );\n}\n\nexport default ComputerScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}