{"ast":null,"code":"// src/utils/hash.js\nexport async function hashPassword(password) {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(password);\n  const hashBuffer = await crypto.subtle.digest(\"SHA-256\", data);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  const hashHex = hashArray.map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n  return hashHex;\n}","map":{"version":3,"names":["hashPassword","password","encoder","TextEncoder","data","encode","hashBuffer","crypto","subtle","digest","hashArray","Array","from","Uint8Array","hashHex","map","b","toString","padStart","join"],"sources":["/Users/maggy/Workspace/bugly-world/src/utils/hash.js"],"sourcesContent":["// src/utils/hash.js\nexport async function hashPassword(password) {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(password);\n  const hashBuffer = await crypto.subtle.digest(\"SHA-256\", data);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  const hashHex = hashArray\n    .map((b) => b.toString(16).padStart(2, \"0\"))\n    .join(\"\");\n  return hashHex;\n}\n"],"mappings":"AAAA;AACA,OAAO,eAAeA,YAAYA,CAACC,QAAQ,EAAE;EAC3C,MAAMC,OAAO,GAAG,IAAIC,WAAW,CAAC,CAAC;EACjC,MAAMC,IAAI,GAAGF,OAAO,CAACG,MAAM,CAACJ,QAAQ,CAAC;EACrC,MAAMK,UAAU,GAAG,MAAMC,MAAM,CAACC,MAAM,CAACC,MAAM,CAAC,SAAS,EAAEL,IAAI,CAAC;EAC9D,MAAMM,SAAS,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,UAAU,CAACP,UAAU,CAAC,CAAC;EACxD,MAAMQ,OAAO,GAAGJ,SAAS,CACtBK,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAC3CC,IAAI,CAAC,EAAE,CAAC;EACX,OAAOL,OAAO;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}