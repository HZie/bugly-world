{"ast":null,"code":"var _jsxFileName = \"/Users/maggy/Workspace/bugly-world/src/components/Minesweeper/Minesweeper.js\",\n  _s = $RefreshSig$();\nimport { collection, query, where, getDocs, doc, getDoc } from \"firebase/firestore\";\nimport { db } from \"../../firebase\";\nimport { useEffect, useState } from \"react\";\nimport Window from \"../Window\";\nimport Buttons from \"../Buttons\";\nimport \"./minesweeper.css\";\nimport quizData from \"../../assets/data/quizzes.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Minesweeper({\n  level = 1,\n  onCorrect\n}) {\n  _s();\n  var _quizData$level, _quizData$level2;\n  const [grid, setGrid] = useState([]);\n  const [mineCount, setMineCount] = useState(0);\n  const [quizOpen, setQuizOpen] = useState(false);\n  const [quizAnswer, setQuizAnswer] = useState(\"\");\n  const [wrongAttempts, setWrongAttempts] = useState(0);\n  const [showHint, setShowHint] = useState(false);\n  const [skippedFlags, setSkippedFlags] = useState([]);\n  const handleSubmitanswer = async () => {\n    try {\n      const data = quizData[level];\n      if (data) {\n        const correctAnswer = data.answer;\n        if (quizAnswer.trim() === correctAnswer) {\n          console.log(\"정답!\");\n          onCorrect && onCorrect();\n          setQuizOpen(false);\n        } else {\n          setWrongAttempts(prev => {\n            const next = prev + 1;\n            if (next >= 3) setShowHint(true);\n            return next;\n          });\n          alert(\"틀렸습니다!\");\n        }\n      } else {\n        alert(\"문제 데이터를 찾을 수 없습니다.\");\n      }\n    } catch (error) {\n      console.error(\"정답 확인 중 오류:\", error);\n    } finally {\n      setQuizAnswer(\"\");\n    }\n  };\n  useEffect(() => {\n    const size = 5 + level * 2; // grid size increases with level (7 to 13)\n    const mines = level; // mine count equals level for now\n    setMineCount(mines);\n    const newGrid = Array.from({\n      length: size\n    }, () => Array.from({\n      length: size\n    }, () => ({\n      revealed: false,\n      mine: false,\n      flagged: false,\n      cleared: false\n    })));\n\n    // Place mines randomly with one flagged\n    const flaggedIndex = Math.floor(Math.random() * mines);\n    let placed = 0;\n    for (let i = 0; i < size * size && placed < mines; i++) {\n      const x = Math.floor(i / size);\n      const y = i % size;\n      if (!newGrid[x][y].mine) {\n        newGrid[x][y].mine = true;\n        newGrid[x][y].flagged = placed === flaggedIndex;\n        newGrid[x][y].cleared = false;\n        placed++;\n      }\n    }\n    setGrid(newGrid);\n  }, [level]);\n  const onCellClick = (row, col) => {\n    setGrid(prevGrid => {\n      const newGrid = prevGrid.map(r => r.map(c => ({\n        ...c\n      })));\n      const clicked = newGrid[row][col];\n      if (!clicked.flagged || clicked.cleared) return newGrid;\n      clicked.revealed = true;\n      clicked.flagged = false;\n      clicked.cleared = true;\n      setQuizOpen(true); // Open quiz window\n\n      // Activate next flagged mine\n      for (let i = 0; i < newGrid.length; i++) {\n        for (let j = 0; j < newGrid[i].length; j++) {\n          if (newGrid[i][j].mine && !newGrid[i][j].cleared && !newGrid[i][j].flagged) {\n            newGrid[i][j].flagged = true;\n            return newGrid;\n          }\n        }\n      }\n      return newGrid;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"minesweeper\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Level: \", level, \", Mines: \", mineCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"minesweeper-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"minesweeper-grid\",\n        style: {\n          gridTemplateColumns: `repeat(${grid.length}, 1fr)`\n        },\n        children: grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"minesweeper-row\",\n          children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `minesweeper-cell ${cell.revealed ? \"revealed\" : \"\"} ${cell.flagged ? \"flagged\" : \"\"}`,\n            onClick: () => onCellClick(rowIndex, colIndex),\n            children: cell.revealed ? cell.cleared ? \"🧪\" : cell.mine ? \"💣\" : \"\" : skippedFlags.includes(`${rowIndex}-${colIndex}`) ? \"❌\" : cell.flagged ? \"🔻\" : \"\"\n          }, `${rowIndex}-${colIndex}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), quizOpen && /*#__PURE__*/_jsxDEV(Window, {\n      title: \"\\uD034\\uC988\",\n      onClose: () => setQuizOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: (_quizData$level = quizData[level]) === null || _quizData$level === void 0 ? void 0 : _quizData$level.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC815\\uB2F5\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: quizAnswer,\n        onChange: e => setQuizAnswer(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), showHint && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"hint\",\n        children: [\"\\uD78C\\uD2B8: \", (_quizData$level2 = quizData[level]) === null || _quizData$level2 === void 0 ? void 0 : _quizData$level2.hint]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n        onClick: handleSubmitanswer,\n        children: \"\\uC81C\\uCD9C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), wrongAttempts >= 3 && /*#__PURE__*/_jsxDEV(Buttons, {\n        onClick: () => {\n          setQuizOpen(false);\n          setGrid(prevGrid => {\n            const newGrid = prevGrid.map(r => r.map(c => ({\n              ...c\n            })));\n            for (let i = 0; i < newGrid.length; i++) {\n              for (let j = 0; j < newGrid[i].length; j++) {\n                const cell = newGrid[i][j];\n                if (cell.flagged && !cell.cleared) {\n                  cell.revealed = true;\n                  cell.flagged = false;\n                  cell.cleared = true;\n                  setSkippedFlags(prev => [...prev, `${i}-${j}`]);\n                  return newGrid;\n                }\n              }\n            }\n            return newGrid;\n          });\n        },\n        children: \"\\uD034\\uC988 \\uB118\\uC5B4\\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(Minesweeper, \"o4Nxn0j0XNt9GyGkewZGjYCYU4I=\");\n_c = Minesweeper;\nexport default Minesweeper;\nvar _c;\n$RefreshReg$(_c, \"Minesweeper\");","map":{"version":3,"names":["collection","query","where","getDocs","doc","getDoc","db","useEffect","useState","Window","Buttons","quizData","jsxDEV","_jsxDEV","Minesweeper","level","onCorrect","_s","_quizData$level","_quizData$level2","grid","setGrid","mineCount","setMineCount","quizOpen","setQuizOpen","quizAnswer","setQuizAnswer","wrongAttempts","setWrongAttempts","showHint","setShowHint","skippedFlags","setSkippedFlags","handleSubmitanswer","data","correctAnswer","answer","trim","console","log","prev","next","alert","error","size","mines","newGrid","Array","from","length","revealed","mine","flagged","cleared","flaggedIndex","Math","floor","random","placed","i","x","y","onCellClick","row","col","prevGrid","map","r","c","clicked","j","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","gridTemplateColumns","rowIndex","cell","colIndex","onClick","includes","title","onClose","question","type","placeholder","value","onChange","e","target","hint","_c","$RefreshReg$"],"sources":["/Users/maggy/Workspace/bugly-world/src/components/Minesweeper/Minesweeper.js"],"sourcesContent":["import {\n  collection,\n  query,\n  where,\n  getDocs,\n  doc,\n  getDoc,\n} from \"firebase/firestore\";\nimport { db } from \"../../firebase\";\nimport { useEffect, useState } from \"react\";\nimport Window from \"../Window\";\nimport Buttons from \"../Buttons\";\nimport \"./minesweeper.css\";\nimport quizData from \"../../assets/data/quizzes.json\";\n\nfunction Minesweeper({ level = 1, onCorrect }) {\n  const [grid, setGrid] = useState([]);\n  const [mineCount, setMineCount] = useState(0);\n  const [quizOpen, setQuizOpen] = useState(false);\n  const [quizAnswer, setQuizAnswer] = useState(\"\");\n  const [wrongAttempts, setWrongAttempts] = useState(0);\n  const [showHint, setShowHint] = useState(false);\n  const [skippedFlags, setSkippedFlags] = useState([]);\n\n  const handleSubmitanswer = async () => {\n    try {\n      const data = quizData[level];\n      if (data) {\n        const correctAnswer = data.answer;\n\n        if (quizAnswer.trim() === correctAnswer) {\n          console.log(\"정답!\");\n          onCorrect && onCorrect();\n          setQuizOpen(false);\n        } else {\n          setWrongAttempts((prev) => {\n            const next = prev + 1;\n            if (next >= 3) setShowHint(true);\n            return next;\n          });\n          alert(\"틀렸습니다!\");\n        }\n      } else {\n        alert(\"문제 데이터를 찾을 수 없습니다.\");\n      }\n    } catch (error) {\n      console.error(\"정답 확인 중 오류:\", error);\n    } finally {\n      setQuizAnswer(\"\");\n    }\n  };\n\n  useEffect(() => {\n    const size = 5 + level * 2; // grid size increases with level (7 to 13)\n    const mines = level; // mine count equals level for now\n    setMineCount(mines);\n\n    const newGrid = Array.from({ length: size }, () =>\n      Array.from({ length: size }, () => ({\n        revealed: false,\n        mine: false,\n        flagged: false,\n        cleared: false,\n      }))\n    );\n\n    // Place mines randomly with one flagged\n    const flaggedIndex = Math.floor(Math.random() * mines);\n    let placed = 0;\n    for (let i = 0; i < size * size && placed < mines; i++) {\n      const x = Math.floor(i / size);\n      const y = i % size;\n      if (!newGrid[x][y].mine) {\n        newGrid[x][y].mine = true;\n        newGrid[x][y].flagged = placed === flaggedIndex;\n        newGrid[x][y].cleared = false;\n        placed++;\n      }\n    }\n\n    setGrid(newGrid);\n  }, [level]);\n\n  const onCellClick = (row, col) => {\n    setGrid((prevGrid) => {\n      const newGrid = prevGrid.map((r) => r.map((c) => ({ ...c })));\n      const clicked = newGrid[row][col];\n      if (!clicked.flagged || clicked.cleared) return newGrid;\n\n      clicked.revealed = true;\n      clicked.flagged = false;\n      clicked.cleared = true;\n\n      setQuizOpen(true); // Open quiz window\n\n      // Activate next flagged mine\n      for (let i = 0; i < newGrid.length; i++) {\n        for (let j = 0; j < newGrid[i].length; j++) {\n          if (\n            newGrid[i][j].mine &&\n            !newGrid[i][j].cleared &&\n            !newGrid[i][j].flagged\n          ) {\n            newGrid[i][j].flagged = true;\n            return newGrid;\n          }\n        }\n      }\n\n      return newGrid;\n    });\n  };\n\n  return (\n    <div className=\"minesweeper\">\n      <p>\n        Level: {level}, Mines: {mineCount}\n      </p>\n      <div className=\"minesweeper-wrapper\">\n        <div\n          className=\"minesweeper-grid\"\n          style={{ gridTemplateColumns: `repeat(${grid.length}, 1fr)` }}\n        >\n          {grid.map((row, rowIndex) => (\n            <div key={rowIndex} className=\"minesweeper-row\">\n              {row.map((cell, colIndex) => (\n                <div\n                  key={`${rowIndex}-${colIndex}`}\n                  className={`minesweeper-cell ${\n                    cell.revealed ? \"revealed\" : \"\"\n                  } ${cell.flagged ? \"flagged\" : \"\"}`}\n                  onClick={() => onCellClick(rowIndex, colIndex)}\n                >\n                  {cell.revealed\n                    ? cell.cleared\n                      ? \"🧪\"\n                      : cell.mine\n                      ? \"💣\"\n                      : \"\"\n                    : skippedFlags.includes(`${rowIndex}-${colIndex}`)\n                    ? \"❌\"\n                    : cell.flagged\n                    ? \"🔻\"\n                    : \"\"}\n                </div>\n              ))}\n            </div>\n          ))}\n        </div>\n      </div>\n      {quizOpen && (\n        <Window title=\"퀴즈\" onClose={() => setQuizOpen(false)}>\n          <p>{quizData[level]?.question}</p>\n          <input\n            type=\"text\"\n            placeholder=\"정답을 입력하세요\"\n            value={quizAnswer}\n            onChange={(e) => setQuizAnswer(e.target.value)}\n          />\n          {showHint && <p className=\"hint\">힌트: {quizData[level]?.hint}</p>}\n          <Buttons onClick={handleSubmitanswer}>제출</Buttons>\n          {wrongAttempts >= 3 && (\n            <Buttons\n              onClick={() => {\n                setQuizOpen(false);\n                setGrid((prevGrid) => {\n                  const newGrid = prevGrid.map((r) => r.map((c) => ({ ...c })));\n                  for (let i = 0; i < newGrid.length; i++) {\n                    for (let j = 0; j < newGrid[i].length; j++) {\n                      const cell = newGrid[i][j];\n                      if (cell.flagged && !cell.cleared) {\n                        cell.revealed = true;\n                        cell.flagged = false;\n                        cell.cleared = true;\n                        setSkippedFlags((prev) => [...prev, `${i}-${j}`]);\n                        return newGrid;\n                      }\n                    }\n                  }\n                  return newGrid;\n                });\n              }}\n            >\n              퀴즈 넘어가기\n            </Buttons>\n          )}\n        </Window>\n      )}\n    </div>\n  );\n}\n\nexport default Minesweeper;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}