{"ast":null,"code":"var _jsxFileName = \"/Users/maggy/Workspace/bugly-world/src/screens/MainScreen/MainScreen.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport Minesweeper from \"../../components/Minesweeper/Minesweeper\";\n\n// 로그인용\nimport { useAgent } from \"../../contexts/AgentContext\";\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\nimport { db } from \"../../firebase\";\nimport { hashPassword } from \"../../utils/hash\";\nimport \"../../styles/layout.css\";\nimport \"../../styles/transition.css\";\nimport \"./mainScreen.css\";\nimport Window from \"../../components/Window\";\nimport QuizModal from \"../../components/QuizModal/QuizModal\";\nimport Buttons from \"../../components/Buttons\";\n\n// Sound\nimport error from \"../../assets/sounds/error sound.mp3\";\nimport shutdown from \"../../assets/sounds/shut down.mp3\";\nimport Submits from \"../../components/Submits\";\n\n// folder\nimport activatedImg from \"../../assets/images/activated-folder.png\";\nimport inactivatedImg from \"../../assets/images/inactivated-folder.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainScreen({\n  onNext\n}) {\n  _s();\n  var _quizData$question, _quizData$hint, _quizData$answer;\n  const [fadeIn, setFadeIn] = useState(\"\");\n  const [clickDisabled, setClickDisabled] = useState(false);\n  const {\n    setAgent,\n    skippedCount,\n    setSkippedCount\n  } = useAgent();\n  const [password, setPassword] = useState(\"\");\n  const [loginError, setLoginError] = useState(\"\");\n  const [windows, setWindows] = useState([]);\n  const [activeWindowId, setActiveWindowId] = useState(null);\n  const nextWindowId = useRef(0);\n  const [visibleFolderIndex, setVisibleFolderIndex] = useState(0);\n  const [bugRemovalIndex, setBugRemovalIndex] = useState(0);\n  const [solvedLevels, setSolvedLevels] = useState([]);\n  const [solvedFlags, setSolvedFlags] = useState([]);\n  const [skippedFlags, setSkippedFlags] = useState([]);\n  // Quiz modal state\n  const [quizData, setQuizData] = useState(null);\n  const [quizAnswer, setQuizAnswer] = useState(\"\");\n  const [quizWindowId, setQuizWindowId] = useState(null);\n  const [quizWrongAttempts, setQuizWrongAttempts] = useState(0);\n  const [quizShowHint, setQuizShowHint] = useState(false);\n  const [requestedQuiz, setRequestedQuiz] = useState(null);\n  console.log(\"MainScreen: quizAnswer =\", quizAnswer);\n  const bugCount = 150;\n  const bugDataRef = useRef(Array.from({\n    length: bugCount\n  }, () => ({\n    top: Math.random() * 90,\n    left: Math.random() * 90,\n    size: 1.5 + Math.random() * 1.5\n  })));\n  const bugs = bugDataRef.current.map((data, i) => {\n    if (i < bugRemovalIndex) return null;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"main-screen__bug-text\",\n      style: {\n        top: `${data.top}%`,\n        left: `${data.left}%`,\n        fontSize: `${data.size}vh`\n      },\n      children: \"BUG\"\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this);\n  }).filter(Boolean);\n  async function handleLoginSubmit(e) {\n    e.preventDefault();\n    const hashed = await hashPassword(password);\n    const q = query(collection(db, \"agents\"), where(\"passwordHash\", \"==\", hashed));\n    const snapshot = await getDocs(q);\n    if (!snapshot.empty) {\n      var _data$progress;\n      const doc = snapshot.docs[0];\n      const data = doc.data();\n      setAgent({\n        id: doc.id,\n        progress: (_data$progress = data.progress) !== null && _data$progress !== void 0 ? _data$progress : 0,\n        passwordHash: hashed\n      });\n      setLoginError(\"\");\n      handleClick();\n    } else {\n      setLoginError(\"요원코드가 올바르지 않습니다.\");\n      handleClose();\n    }\n  }\n  const screenRef = useRef(null);\n  const se_error = new Audio(error);\n  const se_shutdown = new Audio(shutdown);\n  function createWindowContent(label) {\n    return {\n      title: \"UglyWorld in_BUG\",\n      content: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [label, \" \\uB0B4\\uC6A9\\uC785\\uB2C8\\uB2E4.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 16\n      }, this)\n    };\n  }\n  useEffect(() => {\n    const fadeTimeout = setTimeout(() => {\n      setFadeIn(\"fade-in\");\n    }, 50);\n    return () => {\n      clearTimeout(fadeTimeout);\n    };\n  }, []);\n  function handleClick() {\n    if (clickDisabled) return;\n    const id = nextWindowId.current++;\n    const {\n      title,\n      content\n    } = createWindowContent(\"첫 번째 창\");\n    setWindows(prev => [...prev, {\n      id,\n      title,\n      content\n    }]);\n    setActiveWindowId(id);\n    se_error.play();\n  }\n  function handleClose(id) {\n    setWindows(prev => {\n      const newWindows = prev.filter(win => win.id !== id);\n      if (newWindows.length > 0) {\n        setActiveWindowId(newWindows[newWindows.length - 1].id);\n      } else {\n        setActiveWindowId(null);\n      }\n      return newWindows;\n    });\n    if (id === quizWindowId) {\n      setQuizWindowId(null);\n    }\n  }\n  function handleMinesweeperSuccess(level, cell = null) {\n    setSolvedLevels(prevSolved => {\n      if (prevSolved.includes(level)) return prevSolved;\n      setBugRemovalIndex(prev => {\n        const step = level === 4 ? bugCount : Math.floor(bugCount / 4);\n        return Math.min(prev + step, bugCount);\n      });\n      setVisibleFolderIndex(prev => Math.max(prev, level));\n      return [...prevSolved, level];\n    });\n  }\n\n  // Quiz modal logic is now handled by useEffect below\n\n  useEffect(() => {\n    var _quizzes$level, _quizEntry$question, _quizEntry$hint, _quizEntry$answer$toS, _quizEntry$answer;\n    if (!requestedQuiz || quizWindowId !== null) return;\n    const {\n      level,\n      cell\n    } = requestedQuiz;\n    const id = nextWindowId.current++;\n    const quizzes = require(\"../../assets/data/quizzes.json\");\n    const cellKey = `${cell.row},${cell.col}`;\n    const quizEntry = (_quizzes$level = quizzes[level]) === null || _quizzes$level === void 0 ? void 0 : _quizzes$level[cellKey];\n    setQuizData({\n      level,\n      cell,\n      question: (_quizEntry$question = quizEntry === null || quizEntry === void 0 ? void 0 : quizEntry.question) !== null && _quizEntry$question !== void 0 ? _quizEntry$question : \"문제가 존재하지 않습니다.\",\n      hint: (_quizEntry$hint = quizEntry === null || quizEntry === void 0 ? void 0 : quizEntry.hint) !== null && _quizEntry$hint !== void 0 ? _quizEntry$hint : \"힌트 없음\",\n      answer: (_quizEntry$answer$toS = quizEntry === null || quizEntry === void 0 ? void 0 : (_quizEntry$answer = quizEntry.answer) === null || _quizEntry$answer === void 0 ? void 0 : _quizEntry$answer.toString().trim()) !== null && _quizEntry$answer$toS !== void 0 ? _quizEntry$answer$toS : \"\"\n    });\n    setQuizWindowId(id);\n    setActiveWindowId(id);\n    setQuizWrongAttempts(0);\n    setQuizShowHint(false);\n    setRequestedQuiz(null);\n  }, [requestedQuiz, quizWindowId]);\n  useEffect(() => {\n    if (!solvedFlags.length) return;\n    const latest = solvedFlags[solvedFlags.length - 1];\n    if (!(latest !== null && latest !== void 0 && latest.level)) return;\n    handleMinesweeperSuccess(latest.level, latest.cell);\n  }, [solvedFlags]);\n  function handleQuizSubmit() {\n    if (!quizData) return;\n    if (quizAnswer.trim().toLowerCase() === quizData.answer.trim().toLowerCase()) {\n      console.log(\"Quiz answered correctly. Submitting for level:\", quizData.level, \"cell:\", quizData.cell);\n      setQuizAnswer(\"\");\n      setQuizWindowId(null);\n      setSolvedFlags(prev => [...prev, {\n        level: quizData.level,\n        cell: {\n          row: quizData.cell.row,\n          col: quizData.cell.col\n        }\n      }]);\n    } else {\n      setQuizWrongAttempts(prev => {\n        const next = prev + 1;\n        if (next >= 3) setQuizShowHint(true);\n        return next;\n      });\n    }\n  }\n  function handleSkipQuiz() {\n    if (!quizData) return;\n    setSkippedFlags(prev => [...prev, {\n      level: quizData.level,\n      cell: {\n        row: quizData.cell.row,\n        col: quizData.cell.col\n      }\n    }]);\n    setQuizAnswer(\"\");\n    setQuizWindowId(null);\n    setQuizShowHint(false);\n    handleMinesweeperSuccess(quizData.level);\n  }\n  function handleFolderClick(label, level) {\n    const id = nextWindowId.current++;\n    setWindows(prev => [...prev, {\n      id,\n      title: \"UglyWorld in_BUG\",\n      level // add level here explicitly\n    }]);\n    setActiveWindowId(id);\n    se_error.play();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `mobile main-screen pre-fade ${fadeIn}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-screen__bug-background\",\n      children: [bugs, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-screen__folders\",\n        children: [\"프로그램 설치파일\", \"보안패치\", \"바이러스 샘플\", \"비밀 로그\"].map((label, index) => {\n          const isActive = index <= visibleFolderIndex;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"folder-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"folder-button\",\n              onClick: () => isActive && handleFolderClick(label, index + 1),\n              disabled: !isActive,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: isActive ? activatedImg : inactivatedImg,\n                alt: `${label} folder`,\n                className: \"folder-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-screen__screen\",\n        ref: screenRef,\n        children: [windows.map(({\n          id,\n          title,\n          level\n        }) => {\n          var _require$level;\n          return /*#__PURE__*/_jsxDEV(Window, {\n            title: title,\n            parentRef: screenRef,\n            onClose: () => handleClose(id),\n            isActive: activeWindowId === id ? \"active\" : \"\",\n            draggable: true,\n            onClick: () => setActiveWindowId(id),\n            children: /*#__PURE__*/_jsxDEV(Minesweeper, {\n              level: level,\n              parentRef: screenRef,\n              onSelfClose: () => handleClose(id),\n              onSuccess: () => handleMinesweeperSuccess(level),\n              onSkipSuccess: () => handleMinesweeperSuccess(level),\n              solved: solvedFlags.filter(f => f.level === level).length + skippedFlags.filter(f => f.level === level).length >= Object.keys((_require$level = require(\"../../assets/data/quizzes.json\")[level]) !== null && _require$level !== void 0 ? _require$level : {}).length,\n              skippedFlags: skippedFlags,\n              setSkippedCount: setSkippedCount,\n              onFlagClick: cell => setRequestedQuiz({\n                level,\n                cell\n              }),\n              solvedFlags: solvedFlags\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this);\n        }), quizWindowId && /*#__PURE__*/_jsxDEV(Window, {\n          title: \"\\uD034\\uC988\",\n          parentRef: screenRef,\n          onClose: () => handleClose(quizWindowId),\n          isActive: activeWindowId === quizWindowId ? \"active\" : \"\",\n          draggable: true,\n          onClick: () => setActiveWindowId(quizWindowId),\n          children: /*#__PURE__*/_jsxDEV(QuizModal, {\n            level: quizData === null || quizData === void 0 ? void 0 : quizData.level,\n            question: (_quizData$question = quizData === null || quizData === void 0 ? void 0 : quizData.question) !== null && _quizData$question !== void 0 ? _quizData$question : \"문제가 존재하지 않습니다.\",\n            hint: (_quizData$hint = quizData === null || quizData === void 0 ? void 0 : quizData.hint) !== null && _quizData$hint !== void 0 ? _quizData$hint : \"힌트 없음\",\n            answer: (_quizData$answer = quizData === null || quizData === void 0 ? void 0 : quizData.answer) !== null && _quizData$answer !== void 0 ? _quizData$answer : \"\",\n            value: quizAnswer,\n            onChange: setQuizAnswer,\n            onSubmit: handleQuizSubmit,\n            onSkip: handleSkipQuiz,\n            wrongAttempts: quizWrongAttempts,\n            showHint: quizShowHint,\n            onClose: () => handleClose(quizWindowId),\n            parentRef: screenRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this)\n        }, quizWindowId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n}\n_s(MainScreen, \"KM7jltUvsrGEVZwIhEMxaAlOcJM=\", false, function () {\n  return [useAgent];\n});\n_c = MainScreen;\nexport default MainScreen;\nvar _c;\n$RefreshReg$(_c, \"MainScreen\");","map":{"version":3,"names":["useEffect","useState","useRef","Minesweeper","useAgent","collection","query","where","getDocs","db","hashPassword","Window","QuizModal","Buttons","error","shutdown","Submits","activatedImg","inactivatedImg","jsxDEV","_jsxDEV","MainScreen","onNext","_s","_quizData$question","_quizData$hint","_quizData$answer","fadeIn","setFadeIn","clickDisabled","setClickDisabled","setAgent","skippedCount","setSkippedCount","password","setPassword","loginError","setLoginError","windows","setWindows","activeWindowId","setActiveWindowId","nextWindowId","visibleFolderIndex","setVisibleFolderIndex","bugRemovalIndex","setBugRemovalIndex","solvedLevels","setSolvedLevels","solvedFlags","setSolvedFlags","skippedFlags","setSkippedFlags","quizData","setQuizData","quizAnswer","setQuizAnswer","quizWindowId","setQuizWindowId","quizWrongAttempts","setQuizWrongAttempts","quizShowHint","setQuizShowHint","requestedQuiz","setRequestedQuiz","console","log","bugCount","bugDataRef","Array","from","length","top","Math","random","left","size","bugs","current","map","data","i","className","style","fontSize","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","Boolean","handleLoginSubmit","e","preventDefault","hashed","q","snapshot","empty","_data$progress","doc","docs","id","progress","passwordHash","handleClick","handleClose","screenRef","se_error","Audio","se_shutdown","createWindowContent","label","title","content","fadeTimeout","setTimeout","clearTimeout","prev","play","newWindows","win","handleMinesweeperSuccess","level","cell","prevSolved","includes","step","floor","min","max","_quizzes$level","_quizEntry$question","_quizEntry$hint","_quizEntry$answer$toS","_quizEntry$answer","quizzes","require","cellKey","row","col","quizEntry","question","hint","answer","toString","trim","latest","handleQuizSubmit","toLowerCase","next","handleSkipQuiz","handleFolderClick","index","isActive","onClick","disabled","src","alt","ref","_require$level","parentRef","onClose","draggable","onSelfClose","onSuccess","onSkipSuccess","solved","f","Object","keys","onFlagClick","value","onChange","onSubmit","onSkip","wrongAttempts","showHint","_c","$RefreshReg$"],"sources":["/Users/maggy/Workspace/bugly-world/src/screens/MainScreen/MainScreen.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\nimport Minesweeper from \"../../components/Minesweeper/Minesweeper\";\n\n// 로그인용\nimport { useAgent } from \"../../contexts/AgentContext\";\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\nimport { db } from \"../../firebase\";\nimport { hashPassword } from \"../../utils/hash\";\n\nimport \"../../styles/layout.css\";\nimport \"../../styles/transition.css\";\nimport \"./mainScreen.css\";\nimport Window from \"../../components/Window\";\nimport QuizModal from \"../../components/QuizModal/QuizModal\";\nimport Buttons from \"../../components/Buttons\";\n\n// Sound\nimport error from \"../../assets/sounds/error sound.mp3\";\nimport shutdown from \"../../assets/sounds/shut down.mp3\";\nimport Submits from \"../../components/Submits\";\n\n// folder\nimport activatedImg from \"../../assets/images/activated-folder.png\";\nimport inactivatedImg from \"../../assets/images/inactivated-folder.png\";\n\nfunction MainScreen({ onNext }) {\n  const [fadeIn, setFadeIn] = useState(\"\");\n  const [clickDisabled, setClickDisabled] = useState(false);\n  const { setAgent, skippedCount, setSkippedCount } = useAgent();\n  const [password, setPassword] = useState(\"\");\n  const [loginError, setLoginError] = useState(\"\");\n  const [windows, setWindows] = useState([]);\n  const [activeWindowId, setActiveWindowId] = useState(null);\n  const nextWindowId = useRef(0);\n  const [visibleFolderIndex, setVisibleFolderIndex] = useState(0);\n  const [bugRemovalIndex, setBugRemovalIndex] = useState(0);\n  const [solvedLevels, setSolvedLevels] = useState([]);\n  const [solvedFlags, setSolvedFlags] = useState([]);\n  const [skippedFlags, setSkippedFlags] = useState([]);\n  // Quiz modal state\n  const [quizData, setQuizData] = useState(null);\n  const [quizAnswer, setQuizAnswer] = useState(\"\");\n  const [quizWindowId, setQuizWindowId] = useState(null);\n  const [quizWrongAttempts, setQuizWrongAttempts] = useState(0);\n  const [quizShowHint, setQuizShowHint] = useState(false);\n  const [requestedQuiz, setRequestedQuiz] = useState(null);\n\n  console.log(\"MainScreen: quizAnswer =\", quizAnswer);\n\n  const bugCount = 150;\n  const bugDataRef = useRef(\n    Array.from({ length: bugCount }, () => ({\n      top: Math.random() * 90,\n      left: Math.random() * 90,\n      size: 1.5 + Math.random() * 1.5,\n    }))\n  );\n\n  const bugs = bugDataRef.current\n    .map((data, i) => {\n      if (i < bugRemovalIndex) return null;\n      return (\n        <span\n          key={i}\n          className=\"main-screen__bug-text\"\n          style={{\n            top: `${data.top}%`,\n            left: `${data.left}%`,\n            fontSize: `${data.size}vh`,\n          }}\n        >\n          BUG\n        </span>\n      );\n    })\n    .filter(Boolean);\n\n  async function handleLoginSubmit(e) {\n    e.preventDefault();\n    const hashed = await hashPassword(password);\n\n    const q = query(\n      collection(db, \"agents\"),\n      where(\"passwordHash\", \"==\", hashed)\n    );\n    const snapshot = await getDocs(q);\n\n    if (!snapshot.empty) {\n      const doc = snapshot.docs[0];\n      const data = doc.data();\n      setAgent({\n        id: doc.id,\n        progress: data.progress ?? 0,\n        passwordHash: hashed,\n      });\n      setLoginError(\"\");\n      handleClick();\n    } else {\n      setLoginError(\"요원코드가 올바르지 않습니다.\");\n      handleClose();\n    }\n  }\n\n  const screenRef = useRef(null);\n\n  const se_error = new Audio(error);\n  const se_shutdown = new Audio(shutdown);\n\n  function createWindowContent(label) {\n    return {\n      title: \"UglyWorld in_BUG\",\n      content: <div>{label} 내용입니다.</div>,\n    };\n  }\n\n  useEffect(() => {\n    const fadeTimeout = setTimeout(() => {\n      setFadeIn(\"fade-in\");\n    }, 50);\n\n    return () => {\n      clearTimeout(fadeTimeout);\n    };\n  }, []);\n\n  function handleClick() {\n    if (clickDisabled) return;\n    const id = nextWindowId.current++;\n    const { title, content } = createWindowContent(\"첫 번째 창\");\n    setWindows((prev) => [...prev, { id, title, content }]);\n    setActiveWindowId(id);\n    se_error.play();\n  }\n\n  function handleClose(id) {\n    setWindows((prev) => {\n      const newWindows = prev.filter((win) => win.id !== id);\n      if (newWindows.length > 0) {\n        setActiveWindowId(newWindows[newWindows.length - 1].id);\n      } else {\n        setActiveWindowId(null);\n      }\n      return newWindows;\n    });\n    if (id === quizWindowId) {\n      setQuizWindowId(null);\n    }\n  }\n\n  function handleMinesweeperSuccess(level, cell = null) {\n    setSolvedLevels((prevSolved) => {\n      if (prevSolved.includes(level)) return prevSolved;\n\n      setBugRemovalIndex((prev) => {\n        const step = level === 4 ? bugCount : Math.floor(bugCount / 4);\n        return Math.min(prev + step, bugCount);\n      });\n      setVisibleFolderIndex((prev) => Math.max(prev, level));\n\n      return [...prevSolved, level];\n    });\n  }\n\n  // Quiz modal logic is now handled by useEffect below\n\n  useEffect(() => {\n    if (!requestedQuiz || quizWindowId !== null) return;\n\n    const { level, cell } = requestedQuiz;\n    const id = nextWindowId.current++;\n    const quizzes = require(\"../../assets/data/quizzes.json\");\n    const cellKey = `${cell.row},${cell.col}`;\n    const quizEntry = quizzes[level]?.[cellKey];\n\n    setQuizData({\n      level,\n      cell,\n      question: quizEntry?.question ?? \"문제가 존재하지 않습니다.\",\n      hint: quizEntry?.hint ?? \"힌트 없음\",\n      answer: quizEntry?.answer?.toString().trim() ?? \"\",\n    });\n    setQuizWindowId(id);\n    setActiveWindowId(id);\n    setQuizWrongAttempts(0);\n    setQuizShowHint(false);\n    setRequestedQuiz(null);\n  }, [requestedQuiz, quizWindowId]);\n\n  useEffect(() => {\n    if (!solvedFlags.length) return;\n    const latest = solvedFlags[solvedFlags.length - 1];\n    if (!latest?.level) return;\n\n    handleMinesweeperSuccess(latest.level, latest.cell);\n  }, [solvedFlags]);\n\n  function handleQuizSubmit() {\n    if (!quizData) return;\n    if (\n      quizAnswer.trim().toLowerCase() === quizData.answer.trim().toLowerCase()\n    ) {\n      console.log(\n        \"Quiz answered correctly. Submitting for level:\",\n        quizData.level,\n        \"cell:\",\n        quizData.cell\n      );\n      setQuizAnswer(\"\");\n      setQuizWindowId(null);\n      setSolvedFlags((prev) => [\n        ...prev,\n        {\n          level: quizData.level,\n          cell: { row: quizData.cell.row, col: quizData.cell.col },\n        },\n      ]);\n    } else {\n      setQuizWrongAttempts((prev) => {\n        const next = prev + 1;\n        if (next >= 3) setQuizShowHint(true);\n        return next;\n      });\n    }\n  }\n\n  function handleSkipQuiz() {\n    if (!quizData) return;\n    setSkippedFlags((prev) => [\n      ...prev,\n      {\n        level: quizData.level,\n        cell: { row: quizData.cell.row, col: quizData.cell.col },\n      },\n    ]);\n    setQuizAnswer(\"\");\n    setQuizWindowId(null);\n    setQuizShowHint(false);\n    handleMinesweeperSuccess(quizData.level);\n  }\n\n  function handleFolderClick(label, level) {\n    const id = nextWindowId.current++;\n    setWindows((prev) => [\n      ...prev,\n      {\n        id,\n        title: \"UglyWorld in_BUG\",\n        level, // add level here explicitly\n      },\n    ]);\n    setActiveWindowId(id);\n    se_error.play();\n  }\n\n  return (\n    <div className={`mobile main-screen pre-fade ${fadeIn}`}>\n      <div className=\"main-screen__bug-background\">\n        {bugs}\n        <div className=\"main-screen__folders\">\n          {[\"프로그램 설치파일\", \"보안패치\", \"바이러스 샘플\", \"비밀 로그\"].map(\n            (label, index) => {\n              const isActive = index <= visibleFolderIndex;\n              return (\n                <div key={index} className=\"folder-wrapper\">\n                  <button\n                    className=\"folder-button\"\n                    onClick={() =>\n                      isActive && handleFolderClick(label, index + 1)\n                    }\n                    disabled={!isActive}\n                  >\n                    <img\n                      src={isActive ? activatedImg : inactivatedImg}\n                      alt={`${label} folder`}\n                      className=\"folder-icon\"\n                    />\n                  </button>\n                  <span>{label}</span>\n                </div>\n              );\n            }\n          )}\n        </div>\n        <div className=\"main-screen__screen\" ref={screenRef}>\n          {windows.map(({ id, title, level }) => (\n            <Window\n              key={id}\n              title={title}\n              parentRef={screenRef}\n              onClose={() => handleClose(id)}\n              isActive={activeWindowId === id ? \"active\" : \"\"}\n              draggable={true}\n              onClick={() => setActiveWindowId(id)}\n            >\n              <Minesweeper\n                key={id}\n                level={level}\n                parentRef={screenRef}\n                onSelfClose={() => handleClose(id)}\n                onSuccess={() => handleMinesweeperSuccess(level)}\n                onSkipSuccess={() => handleMinesweeperSuccess(level)}\n                solved={\n                  solvedFlags.filter((f) => f.level === level).length +\n                    skippedFlags.filter((f) => f.level === level).length >=\n                  Object.keys(\n                    require(\"../../assets/data/quizzes.json\")[level] ?? {}\n                  ).length\n                }\n                skippedFlags={skippedFlags}\n                setSkippedCount={setSkippedCount}\n                onFlagClick={(cell) => setRequestedQuiz({ level, cell })}\n                solvedFlags={solvedFlags}\n              />\n            </Window>\n          ))}\n\n          {quizWindowId && (\n            <Window\n              key={quizWindowId}\n              title=\"퀴즈\"\n              parentRef={screenRef}\n              onClose={() => handleClose(quizWindowId)}\n              isActive={activeWindowId === quizWindowId ? \"active\" : \"\"}\n              draggable={true}\n              onClick={() => setActiveWindowId(quizWindowId)}\n            >\n              <QuizModal\n                level={quizData?.level}\n                question={quizData?.question ?? \"문제가 존재하지 않습니다.\"}\n                hint={quizData?.hint ?? \"힌트 없음\"}\n                answer={quizData?.answer ?? \"\"}\n                value={quizAnswer}\n                onChange={setQuizAnswer}\n                onSubmit={handleQuizSubmit}\n                onSkip={handleSkipQuiz}\n                wrongAttempts={quizWrongAttempts}\n                showHint={quizShowHint}\n                onClose={() => handleClose(quizWindowId)}\n                parentRef={screenRef}\n              />\n            </Window>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MainScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}