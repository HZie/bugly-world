.pre-fade {
  opacity: 0;
}
.fade-in {
  animation: fadeIn 1s ease-in forwards;
}

.fade-out {
  animation: fadeOut 1s ease forwards;
}
/*
.glitch-out {
  animation: glitch 0.5s steps(2, end), fadeOut 0.5s ease forwards;
}


@keyframes glitch {
  0% {
    transform: translate(0, 0) skew(0deg);
  }
  15% {
    transform: translate(-2px, 2px) skew(2deg);
  }
  30% {
    transform: translate(2px, -2px) skew(-2deg);
  }
  45% {
    transform: translate(-2px, -2px) skew(2deg);
  }
  60% {
    transform: translate(2px, 2px) skew(-2deg);
  }
  75% {
    transform: translate(-1px, 1px) skew(1deg);
  }
  100% {
    transform: scale(0.9) rotate(-1deg) skew(0deg);
  }
}
  */

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
.glitch-out {
  position: relative;
  /* 메인 애니메이션: 기존 요소에 기본적인 흔들림 효과 */
  animation: glitchy 0.3s steps(2, end) 1;
  /* fadeOut 효과는 필요에 따라 따로 추가할 수 있음 */
  /* animation: glitchy 0.3s steps(2, end), fadeOut 0.5s ease-in 0.3s forwards; */
}

.glitch-out::before,
.glitch-out::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: inherit;
  /* 화면 깨짐 효과를 위해 mix-blend-mode와 opacity 활용 */
  mix-blend-mode: multiply;
  opacity: 0.8;
  pointer-events: none;
}

/* 위쪽 파편 효과: clip-path로 위쪽 절반 영역만 보임 */
.glitch-out::before {
  animation: glitchTop 0.3s infinite steps(2, end);
  clip-path: inset(0 0 55% 0);
  filter: hue-rotate(50deg) contrast(150%);
}

/* 아래쪽 파편 효과: clip-path로 아래쪽 절반 영역만 보임 */
.glitch-out::after {
  animation: glitchBottom 0.3s infinite steps(2, end);
  clip-path: inset(45% 0 0 0);
  filter: hue-rotate(-50deg) brightness(120%);
}

/* 메인 glitch 효과: 기존 요소에 적용 */
@keyframes glitchy {
  0% {
    transform: translate(0, 0) skew(0deg);
  }
  10% {
    transform: translate(-8px, 4px) skew(8deg);
  }
  20% {
    transform: translate(6px, -4px) skew(-6deg);
  }
  30% {
    transform: translate(-10px, 2px) skew(10deg);
  }
  40% {
    transform: translate(8px, -2px) skew(-8deg);
  }
  50% {
    transform: translate(-6px, 4px) skew(6deg);
  }
  60% {
    transform: translate(4px, -4px) skew(-4deg);
  }
  70% {
    transform: translate(-8px, 2px) skew(8deg);
  }
  80% {
    transform: translate(6px, -2px) skew(-6deg);
  }
  90% {
    transform: translate(-4px, 4px) skew(4deg);
  }
  100% {
    transform: translate(0, 0) skew(0deg);
  }
}

/* 상단 파편 애니메이션 */
@keyframes glitchTop {
  0% {
    transform: translate(0, 0);
  }
  50% {
    transform: translate(-12px, -6px);
  }
  100% {
    transform: translate(12px, 6px);
  }
}

/* 하단 파편 애니메이션 */
@keyframes glitchBottom {
  0% {
    transform: translate(0, 0);
  }
  50% {
    transform: translate(12px, 6px);
  }
  100% {
    transform: translate(-12px, -6px);
  }
}
